{"version":3,"sources":["src/sdk/Transcription/ConversationTranscriptionEventArgs.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,oBAAoB,EAAE,uBAAuB,EAAE,MAAM,YAAY,CAAC;AAE3E;;;GAGG;AACH,qBAAa,kCAAmC,SAAQ,oBAAoB;IACxE,OAAO,CAAC,UAAU,CAA0B;IAE5C;;;;;;OAMG;gBACgB,MAAM,EAAE,uBAAuB,EAAE,MAAM,CAAC,EAAE,MAAM,EAAE,SAAS,CAAC,EAAE,MAAM;IAMvF;;;;;;OAMG;IACH,IAAW,MAAM,IAAI,uBAAuB,CAE3C;CACJ","file":"ConversationTranscriptionEventArgs.d.ts","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\nimport { RecognitionEventArgs, SpeechRecognitionResult } from \"../Exports\";\n\n/**\n * Defines contents of speech recognizing/recognized event.\n * @class SpeechRecognitionEventArgs\n */\nexport class ConversationTranscriptionEventArgs extends RecognitionEventArgs {\n    private privResult: SpeechRecognitionResult;\n\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {SpeechRecognitionResult} result - The speech recognition result.\n     * @param {number} offset - The offset.\n     * @param {string} sessionId - The session id.\n     */\n    public constructor(result: SpeechRecognitionResult, offset?: number, sessionId?: string) {\n        super(offset, sessionId);\n\n        this.privResult = result;\n    }\n\n    /**\n     * Specifies the recognition result.\n     * @member ConversationTranscriptionEventArgs.prototype.result\n     * @function\n     * @public\n     * @returns {SpeechRecognitionResult} the recognition result.\n     */\n    public get result(): SpeechRecognitionResult {\n        return this.privResult;\n    }\n}\n"]}