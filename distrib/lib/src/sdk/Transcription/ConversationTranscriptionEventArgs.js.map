{"version":3,"sources":["src/sdk/Transcription/ConversationTranscriptionEventArgs.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,kCAAkC;;;;;;;;;;;;;;;;AAElC,sCAA2E;AAE3E;;;GAGG;AACH;IAAwD,sDAAoB;IAGxE;;;;;;OAMG;IACH,4CAAmB,MAA+B,EAAE,MAAe,EAAE,SAAkB;QAAvF,YACI,kBAAM,MAAM,EAAE,SAAS,CAAC,SAG3B;QADG,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC;;IAC7B,CAAC;IASD,sBAAW,sDAAM;QAPjB;;;;;;WAMG;aACH;YACI,OAAO,IAAI,CAAC,UAAU,CAAC;QAC3B,CAAC;;;OAAA;IACL,yCAAC;AAAD,CA1BA,AA0BC,CA1BuD,8BAAoB,GA0B3E;AA1BY,gFAAkC","file":"ConversationTranscriptionEventArgs.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\nimport { RecognitionEventArgs, SpeechRecognitionResult } from \"../Exports\";\n\n/**\n * Defines contents of speech recognizing/recognized event.\n * @class SpeechRecognitionEventArgs\n */\nexport class ConversationTranscriptionEventArgs extends RecognitionEventArgs {\n    private privResult: SpeechRecognitionResult;\n\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {SpeechRecognitionResult} result - The speech recognition result.\n     * @param {number} offset - The offset.\n     * @param {string} sessionId - The session id.\n     */\n    public constructor(result: SpeechRecognitionResult, offset?: number, sessionId?: string) {\n        super(offset, sessionId);\n\n        this.privResult = result;\n    }\n\n    /**\n     * Specifies the recognition result.\n     * @member ConversationTranscriptionEventArgs.prototype.result\n     * @function\n     * @public\n     * @returns {SpeechRecognitionResult} the recognition result.\n     */\n    public get result(): SpeechRecognitionResult {\n        return this.privResult;\n    }\n}\n"]}