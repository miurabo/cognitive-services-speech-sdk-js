{"version":3,"sources":["src/sdk/PronunciationAssessmentResult.ts"],"names":[],"mappings":"AAIA,OAAO,EAEH,iBAAiB,EACpB,MAAM,WAAW,CAAC;AAMnB,UAAU,YAAY;IAClB,KAAK,EAAE,UAAU,EAAE,CAAC;IACpB,uBAAuB,EAAE;QACrB,aAAa,EAAE,MAAM,CAAC;QACtB,iBAAiB,EAAE,MAAM,CAAC;QAC1B,YAAY,EAAE,MAAM,CAAC;QACrB,SAAS,EAAE,MAAM,CAAC;KACrB,CAAC;CACL;AAED,UAAU,UAAU;IAChB,IAAI,EAAE,MAAM,CAAC;IACb,QAAQ,EAAE;QACN,OAAO,CAAC,EAAE,MAAM,CAAC;QACjB,uBAAuB,CAAC,EAAE;YACtB,aAAa,EAAE;gBAAE,OAAO,EAAE,MAAM,CAAA;aAAE,EAAE,CAAC;SACxC,CAAC;KACJ,EAAE,CAAC;IACL,uBAAuB,CAAC,EAAE;QACtB,aAAa,EAAE,MAAM,CAAC;QACtB,SAAS,EAAE,MAAM,CAAC;KACrB,CAAC;IACF,SAAS,EAAE;QAAE,QAAQ,EAAE,MAAM,CAAA;KAAE,EAAE,CAAC;CACrC;AAED;;;;GAIG;AACH,qBAAa,6BAA6B;IACtC,OAAO,CAAC,YAAY,CAAe;IAEnC,OAAO;IAMP;;;;;;;OAOG;WACW,UAAU,CAAC,MAAM,EAAE,iBAAiB,GAAG,6BAA6B;IAOlF;;;;;;OAMG;IACH,IAAW,YAAY,IAAI,YAAY,CAEtC;IAED;;;;;;;OAOG;IACH,IAAW,aAAa,IAAI,MAAM,CAEjC;IAED;;;;;;;OAOG;IACH,IAAW,kBAAkB,IAAI,MAAM,CAEtC;IAED;;;;;;OAMG;IACH,IAAW,iBAAiB,IAAI,MAAM,CAErC;IAED;;;;;;OAMG;IACH,IAAW,YAAY,IAAI,MAAM,CAEhC;CACJ","file":"PronunciationAssessmentResult.d.ts","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\nimport {Contracts} from \"./Contracts\";\nimport {\n    PropertyId,\n    RecognitionResult\n} from \"./Exports\";\n\ninterface AssessmentResult {\n    NBest: DetailResult[];\n}\n\ninterface DetailResult {\n    Words: WordResult[];\n    PronunciationAssessment: {\n        AccuracyScore: number;\n        CompletenessScore: number;\n        FluencyScore: number;\n        PronScore: number;\n    };\n}\n\ninterface WordResult {\n    Word: string;\n    Phonemes: {\n        Phoneme?: string;\n        PronunciationAssessment?: {\n            NBestPhonemes: { Phoneme: string }[];\n        };\n     }[];\n    PronunciationAssessment?: {\n        AccuracyScore: number;\n        ErrorType: string;\n    };\n    Syllables: { Syllable: string }[];\n}\n\n/**\n * Pronunciation assessment results.\n * @class PronunciationAssessmentResult\n * Added in version 1.15.0.\n */\nexport class PronunciationAssessmentResult {\n    private privPronJson: DetailResult;\n\n    private constructor(jsonString: string) {\n        const j = JSON.parse(jsonString) as AssessmentResult;\n        Contracts.throwIfNullOrUndefined(j.NBest[0], \"NBest\");\n        this.privPronJson = j.NBest[0];\n    }\n\n    /**\n     * @member PronunciationAssessmentResult.fromResult\n     * @function\n     * @public\n     * @param {RecognitionResult} result The recognition result.\n     * @return {PronunciationAssessmentConfig} Instance of PronunciationAssessmentConfig\n     * @summary Creates an instance of the PronunciationAssessmentResult from recognition result.\n     */\n    public static fromResult(result: RecognitionResult): PronunciationAssessmentResult {\n        Contracts.throwIfNullOrUndefined(result, \"result\");\n        const json: string = result.properties.getProperty(PropertyId.SpeechServiceResponse_JsonResult);\n        Contracts.throwIfNullOrUndefined(json, \"json\");\n        return new PronunciationAssessmentResult(json);\n    }\n\n    /**\n     * Gets the detail result of pronunciation assessment.\n     * @member PronunciationAssessmentConfig.prototype.detailResult\n     * @function\n     * @public\n     * @returns {DetailResult} detail result.\n     */\n    public get detailResult(): DetailResult {\n        return this.privPronJson;\n    }\n\n    /**\n     * The score indicating the pronunciation accuracy of the given speech, which indicates\n     * how closely the phonemes match a native speaker's pronunciation.\n     * @member PronunciationAssessmentResult.prototype.accuracyScore\n     * @function\n     * @public\n     * @returns {number} Accuracy score.\n     */\n    public get accuracyScore(): number {\n        return this.detailResult.PronunciationAssessment.AccuracyScore;\n    }\n\n    /**\n     * The overall score indicating the pronunciation quality of the given speech.\n     * This is calculated from AccuracyScore, FluencyScore and CompletenessScore with weight.\n     * @member PronunciationAssessmentResult.prototype.pronunciationScore\n     * @function\n     * @public\n     * @returns {number} Pronunciation score.\n     */\n    public get pronunciationScore(): number {\n        return this.detailResult.PronunciationAssessment.PronScore;\n    }\n\n    /**\n     * The score indicating the completeness of the given speech by calculating the ratio of pronounced words towards entire input.\n     * @member PronunciationAssessmentResult.prototype.completenessScore\n     * @function\n     * @public\n     * @returns {number} Completeness score.\n     */\n    public get completenessScore(): number {\n        return this.detailResult.PronunciationAssessment.CompletenessScore;\n    }\n\n    /**\n     * The score indicating the fluency of the given speech.\n     * @member PronunciationAssessmentResult.prototype.fluencyScore\n     * @function\n     * @public\n     * @returns {number} Fluency score.\n     */\n    public get fluencyScore(): number {\n        return this.detailResult.PronunciationAssessment.FluencyScore;\n    }\n}\n"]}