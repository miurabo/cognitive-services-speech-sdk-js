{"version":3,"sources":["src/sdk/SpeechRecognitionResult.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,kCAAkC;;;;;;;;;;;;;;;;AAElC,qCAAgF;AAEhF;;;GAGG;AACH;IAA6C,2CAAiB;IAE1D;;;;;;;;;;;;;;;OAeG;IACH,iCAAmB,QAAiB,EAAE,MAAqB,EAAE,IAAa,EACvD,QAAiB,EAAE,MAAe,EAAE,QAAiB,EACrD,2BAAoC,EAAE,SAAkB,EAAE,YAAqB,EAC/E,IAAa,EAAE,UAA+B;QAHjE,YAII,kBAAM,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,2BAA2B,EAAE,YAAY,EAAE,IAAI,EAAE,UAAU,CAAC,SAEzH;QADG,KAAI,CAAC,aAAa,GAAG,SAAS,CAAC;;IACnC,CAAC;IASD,sBAAW,8CAAS;QAPpB;;;;;;WAMG;aACH;YACI,OAAO,IAAI,CAAC,aAAa,CAAC;QAC9B,CAAC;;;OAAA;IAEL,8BAAC;AAAD,CArCA,AAqCC,CArC4C,2BAAiB,GAqC7D;AArCY,0DAAuB","file":"SpeechRecognitionResult.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\nimport { PropertyCollection, RecognitionResult, ResultReason } from \"./Exports\";\n\n/**\n * Defines result of speech recognition.\n * @class SpeechRecognitionResult\n */\nexport class SpeechRecognitionResult extends RecognitionResult {\n    private readonly privSpeakerId: string;\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @public\n     * @param {string} resultId - The result id.\n     * @param {ResultReason} reason - The reason.\n     * @param {string} text - The recognized text.\n     * @param {number} duration - The duration.\n     * @param {number} offset - The offset into the stream.\n     * @param {string} language - Primary Language detected, if provided.\n     * @param {string} languageDetectionConfidence - Primary Language confidence (\"Unknown,\" \"Low,\" \"Medium,\" \"High\"...), if provided.\n     * @param {string} speakerId - speaker id for conversation transcription, if provided.\n     * @param {string} errorDetails - Error details, if provided.\n     * @param {string} json - Additional Json, if provided.\n     * @param {PropertyCollection} properties - Additional properties, if provided.\n     */\n    public constructor(resultId?: string, reason?: ResultReason, text?: string,\n                       duration?: number, offset?: number, language?: string,\n                       languageDetectionConfidence?: string, speakerId?: string, errorDetails?: string,\n                       json?: string, properties?: PropertyCollection) {\n        super(resultId, reason, text, duration, offset, language, languageDetectionConfidence, errorDetails, json, properties);\n        this.privSpeakerId = speakerId;\n    }\n\n    /**\n     * speaker id from conversation transcription/id scenarios\n     * @member SpeechRecognitionResult.prototype.speakerId\n     * @function\n     * @public\n     * @returns {string} id of speaker in given result\n     */\n    public get speakerId(): string {\n        return this.privSpeakerId;\n    }\n\n}\n"]}