{"version":3,"sources":["src/sdk/SpeechRecognitionEventArgs.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,kCAAkC;;;;;;;;;;;;;;;;AAElC,yCAAyC;AACzC,qCAA2G;AAE3G;;;GAGG;AACH;IAAgD,8CAAoB;IAGhE;;;;;;OAMG;IACH,oCAAmB,MAA+B,EAAE,MAAe,EAAE,SAAkB;QAAvF,YACI,kBAAM,MAAM,EAAE,SAAS,CAAC,SAG3B;QADG,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC;;IAC7B,CAAC;IASD,sBAAW,8CAAM;QAPjB;;;;;;WAMG;aACH;YACI,OAAO,IAAI,CAAC,UAAU,CAAC;QAC3B,CAAC;;;OAAA;IACL,iCAAC;AAAD,CA1BA,AA0BC,CA1B+C,8BAAoB,GA0BnE;AA1BY,gEAA0B;AA4BvC;;;GAGG;AACH;IAAwD,sDAAoB;IAGxE;;;;;;OAMG;IACH,4CAAmB,MAAuC,EAAE,MAAe,EAAE,SAAkB;QAA/F,YACI,kBAAM,MAAM,EAAE,SAAS,CAAC,SAG3B;QADG,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC;;IAC7B,CAAC;IASG,sBAAW,sDAAM;QAPrB;;;;;;WAMG;aACC;YACI,OAAO,IAAI,CAAC,UAAU,CAAC;QAC3B,CAAC;;;OAAA;IACT,yCAAC;AAAD,CA1BA,AA0BC,CA1BuD,8BAAoB,GA0B3E;AA1BY,gFAAkC;AA4B/C;;;GAGG;AACH;IAAmD,iDAA0B;IAA7E;;IACA,CAAC;IAAD,oCAAC;AAAD,CADA,AACC,CADkD,0BAA0B,GAC5E;AADY,sEAA6B","file":"SpeechRecognitionEventArgs.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\n/* eslint-disable max-classes-per-file */\nimport { RecognitionEventArgs, SpeechRecognitionResult, ConversationTranscriptionResult } from \"./Exports\";\n\n/**\n * Defines contents of speech recognizing/recognized event.\n * @class SpeechRecognitionEventArgs\n */\nexport class SpeechRecognitionEventArgs extends RecognitionEventArgs {\n    private privResult: SpeechRecognitionResult;\n\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {SpeechRecognitionResult} result - The speech recognition result.\n     * @param {number} offset - The offset.\n     * @param {string} sessionId - The session id.\n     */\n    public constructor(result: SpeechRecognitionResult, offset?: number, sessionId?: string) {\n        super(offset, sessionId);\n\n        this.privResult = result;\n    }\n\n    /**\n     * Specifies the recognition result.\n     * @member SpeechRecognitionEventArgs.prototype.result\n     * @function\n     * @public\n     * @returns {SpeechRecognitionResult} the recognition result.\n     */\n    public get result(): SpeechRecognitionResult {\n        return this.privResult;\n    }\n}\n\n/**\n * Defines contents of conversation transcribed/transcribing event.\n * @class ConversationTranscriptionEventArgs\n */\nexport class ConversationTranscriptionEventArgs extends RecognitionEventArgs {\n    private privResult: ConversationTranscriptionResult;\n\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {ConversationTranscriptionResult} result - The conversation transcription result.\n     * @param {number} offset - The offset.\n     * @param {string} sessionId - The session id.\n     */\n    public constructor(result: ConversationTranscriptionResult, offset?: number, sessionId?: string) {\n        super(offset, sessionId);\n\n        this.privResult = result;\n    }\n\n    /**\n     * Specifies the transcription result.\n     * @member ConversationTranscription1EventArgs.prototype.result\n     * @function\n     * @public\n     * @returns {ConversationTranscriptionResult} the recognition result.\n     */\n        public get result(): ConversationTranscriptionResult {\n            return this.privResult;\n        }\n}\n\n/**\n * Defines contents of meeting transcribed/transcribing event.\n * @class MeetingTranscriptionEventArgs\n */\nexport class MeetingTranscriptionEventArgs extends SpeechRecognitionEventArgs {\n}\n"]}