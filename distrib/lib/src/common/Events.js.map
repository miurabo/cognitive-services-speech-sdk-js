{"version":3,"sources":["src/common/Events.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,kCAAkC;;;AAElC,iCAA4C;AAC5C,6CAA4C;AAI5C;IAAA;IAcA,CAAC;IAXiB,qBAAc,GAA5B,UAA6B,WAAwC;QACjE,IAAI,CAAC,WAAW,EAAE;YACd,MAAM,IAAI,yBAAiB,CAAC,aAAa,CAAC,CAAC;SAC9C;QAED,MAAM,CAAC,YAAY,GAAG,WAAW,CAAC;IACtC,CAAC;IAED,sBAAkB,kBAAQ;aAA1B;YACI,OAAO,MAAM,CAAC,YAAY,CAAC;QAC/B,CAAC;;;OAAA;IAZc,mBAAY,GAAgC,IAAI,yBAAW,EAAiB,CAAC;IAahG,aAAC;CAdD,AAcC,IAAA;AAdY,wBAAM","file":"Events.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\nimport { ArgumentNullError } from \"./Error\";\nimport { EventSource } from \"./EventSource\";\nimport { IEventSource } from \"./IEventSource\";\nimport { PlatformEvent } from \"./PlatformEvent\";\n\nexport class Events {\n    private static privInstance: IEventSource<PlatformEvent> = new EventSource<PlatformEvent>();\n\n    public static setEventSource(eventSource: IEventSource<PlatformEvent>): void {\n        if (!eventSource) {\n            throw new ArgumentNullError(\"eventSource\");\n        }\n\n        Events.privInstance = eventSource;\n    }\n\n    public static get instance(): IEventSource<PlatformEvent> {\n        return Events.privInstance;\n    }\n}\n"]}