{"version":3,"sources":["src/common/ConnectionEvents.ts"],"names":[],"mappings":"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","file":"ConnectionEvents.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\n/* eslint-disable max-classes-per-file */\n\nimport { ConnectionMessage } from \"./ConnectionMessage\";\nimport { IStringDictionary } from \"./IDictionary\";\nimport { EventType, PlatformEvent } from \"./PlatformEvent\";\n\nexport class ServiceEvent extends PlatformEvent {\n    private privJsonResult: string;\n\n    public constructor(eventName: string, jsonstring: string, eventType: EventType = EventType.Info) {\n      super(eventName, eventType);\n      this.privJsonResult = jsonstring;\n    }\n\n    public get jsonString(): string {\n        return this.privJsonResult;\n    }\n}\n\nexport class ConnectionEvent extends PlatformEvent {\n    private privConnectionId: string;\n\n    public constructor(eventName: string, connectionId: string, eventType: EventType = EventType.Info) {\n        super(eventName, eventType);\n        this.privConnectionId = connectionId;\n    }\n\n    public get connectionId(): string {\n        return this.privConnectionId;\n    }\n}\n\nexport class ConnectionStartEvent extends ConnectionEvent {\n    private privUri: string;\n    private privHeaders: IStringDictionary<string>;\n\n    public constructor(connectionId: string, uri: string, headers?: IStringDictionary<string>) {\n        super(\"ConnectionStartEvent\", connectionId);\n        this.privUri = uri;\n        this.privHeaders = headers;\n    }\n\n    public get uri(): string {\n        return this.privUri;\n    }\n\n    public get headers(): IStringDictionary<string> {\n        return this.privHeaders;\n    }\n}\n\nexport class ConnectionEstablishedEvent extends ConnectionEvent {\n    public constructor(connectionId: string) {\n        super(\"ConnectionEstablishedEvent\", connectionId);\n    }\n}\n\nexport class ConnectionClosedEvent extends ConnectionEvent {\n    private privReason: string;\n    private privStatusCode: number;\n\n    public constructor(connectionId: string, statusCode: number, reason: string) {\n        super(\"ConnectionClosedEvent\", connectionId, EventType.Debug);\n        this.privReason = reason;\n        this.privStatusCode = statusCode;\n    }\n\n    public get reason(): string {\n        return this.privReason;\n    }\n\n    public get statusCode(): number {\n        return this.privStatusCode;\n    }\n}\n\nexport class ConnectionErrorEvent extends ConnectionEvent {\n    private readonly privMessage: string;\n    private readonly privType: string;\n\n    public constructor(connectionId: string, message: string, type: string) {\n        super(\"ConnectionErrorEvent\", connectionId, EventType.Debug);\n        this.privMessage = message;\n        this.privType = type;\n    }\n\n    public get message(): string {\n        return this.privMessage;\n    }\n\n    public get type(): string {\n        return this.privType;\n    }\n}\n\nexport class ConnectionEstablishErrorEvent extends ConnectionEvent {\n    private privStatusCode: number;\n    private privReason: string;\n\n    public constructor(connectionId: string, statuscode: number, reason: string) {\n        super(\"ConnectionEstablishErrorEvent\", connectionId, EventType.Error);\n        this.privStatusCode = statuscode;\n        this.privReason = reason;\n    }\n\n    public get reason(): string {\n        return this.privReason;\n    }\n\n    public get statusCode(): number {\n        return this.privStatusCode;\n    }\n}\n\nexport class ConnectionMessageReceivedEvent extends ConnectionEvent {\n    private privNetworkReceivedTime: string;\n    private privMessage: ConnectionMessage;\n\n    public constructor(connectionId: string, networkReceivedTimeISO: string, message: ConnectionMessage) {\n        super(\"ConnectionMessageReceivedEvent\", connectionId);\n        this.privNetworkReceivedTime = networkReceivedTimeISO;\n        this.privMessage = message;\n    }\n\n    public get networkReceivedTime(): string {\n        return this.privNetworkReceivedTime;\n    }\n\n    public get message(): ConnectionMessage {\n        return this.privMessage;\n    }\n}\n\nexport class ConnectionMessageSentEvent extends ConnectionEvent {\n    private privNetworkSentTime: string;\n    private privMessage: ConnectionMessage;\n\n    public constructor(connectionId: string, networkSentTimeISO: string, message: ConnectionMessage) {\n        super(\"ConnectionMessageSentEvent\", connectionId);\n        this.privNetworkSentTime = networkSentTimeISO;\n        this.privMessage = message;\n    }\n\n    public get networkSentTime(): string {\n        return this.privNetworkSentTime;\n    }\n\n    public get message(): ConnectionMessage {\n        return this.privMessage;\n    }\n}\n"]}