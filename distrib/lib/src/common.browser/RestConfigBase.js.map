{"version":3,"sources":["src/common.browser/RestConfigBase.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,kCAAkC;;;AA6BlC;IAAA;IAoDA,CAAC;IAlDG,sBAAkB,gCAAc;aAAhC;YACI,OAAO,cAAc,CAAC,yBAAyB,CAAC;QACpD,CAAC;;;OAAA;IAED,sBAAkB,8BAAY;aAA9B;YACI,OAAO,cAAc,CAAC,iBAAiB,CAAC;QAC5C,CAAC;;;OAAA;IAED,sBAAkB,4BAAU;aAA5B;YACI,OAAO,cAAc,CAAC,cAAc,CAAC;QACzC,CAAC;;;OAAA;IAEuB,wCAAyB,GAAoB;QACjE,OAAO,EAAE;YACL,MAAM,EAAE,kBAAkB;SAC7B;QACD,WAAW,EAAE,KAAK;QAClB,OAAO,EAAE,KAAK;KACjB,CAAC;IAEsB,6BAAc,GAAmB;QACrD,0BAA0B,EAAE,iGAAiG;QAC7H,6BAA6B,EAAE,sDAAsD;QACrF,WAAW,EAAE,kCAAkC;QAC/C,qCAAqC,EAAE,0DAA0D;QACjG,yBAAyB,EAAE,0CAA0C;QACrE,uBAAuB,EAAE,iCAAiC;QAC1D,4BAA4B,EAAE,kEAAkE;QAChG,2BAA2B,EAAE,+DAA+D;QAC5F,oBAAoB,EAAE,kEAAkE;QACxF,qBAAqB,EAAE,6DAA6D;KACvF,CAAC;IAEsB,gCAAiB,GAAgB;QACrD,UAAU,EAAE,aAAa;QACzB,aAAa,EAAE,eAAe;QAC9B,WAAW,EAAE,eAAe;QAC5B,cAAc,EAAE,cAAc;QAC9B,aAAa,EAAE,iBAAiB;QAChC,YAAY,EAAE,UAAU;QACxB,QAAQ,EAAE,UAAU;QACpB,SAAS,EAAE,WAAW;QACtB,SAAS,EAAE,aAAa;QACxB,MAAM,EAAE,QAAQ;QAChB,YAAY,EAAE,OAAO;QACrB,eAAe,EAAE,2BAA2B;QAC5C,kBAAkB,EAAE,8BAA8B;QAClD,KAAK,EAAE,eAAe;KACzB,CAAC;IAEN,qBAAC;CApDD,AAoDC,IAAA;AApDY,wCAAc","file":"RestConfigBase.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\nimport { IErrorMessages } from \"../common/Exports\";\n/**\n * HTTP request helper\n */\nexport interface IRequestOptions {\n    headers?: {[key: string]: string};\n    ignoreCache?: boolean;\n    timeout?: number;\n}\n\nexport interface IRestParams {\n    apiVersion: string;\n    authorization: string;\n    clientAppId: string;\n    contentTypeKey: string;\n    correlationId: string;\n    languageCode: string;\n    nickname: string;\n    profanity: string;\n    requestId: string;\n    roomId: string;\n    sessionToken: string;\n    subscriptionKey: string;\n    subscriptionRegion: string;\n    token: string;\n}\n\nexport class RestConfigBase {\n\n    public static get requestOptions(): IRequestOptions {\n        return RestConfigBase.privDefaultRequestOptions;\n    }\n\n    public static get configParams(): IRestParams {\n        return RestConfigBase.privDefaultParams;\n    }\n\n    public static get restErrors(): IErrorMessages {\n        return RestConfigBase.privRestErrors;\n    }\n\n    private static readonly privDefaultRequestOptions: IRequestOptions = {\n        headers: {\n            Accept: \"application/json\",\n        },\n        ignoreCache: false,\n        timeout: 10000,\n    };\n\n    private static readonly privRestErrors: IErrorMessages = {\n        authInvalidSubscriptionKey: \"You must specify either an authentication token to use, or a Cognitive Speech subscription key.\",\n        authInvalidSubscriptionRegion: \"You must specify the Cognitive Speech region to use.\",\n        invalidArgs: \"Required input not found: {arg}.\",\n        invalidCreateJoinConversationResponse: \"Creating/Joining conversation failed with HTTP {status}.\",\n        invalidParticipantRequest: \"The requested participant was not found.\",\n        permissionDeniedConnect: \"Required credentials not found.\",\n        permissionDeniedConversation: \"Invalid operation: only the host can {command} the conversation.\",\n        permissionDeniedParticipant: \"Invalid operation: only the host can {command} a participant.\",\n        permissionDeniedSend: \"Invalid operation: the conversation is not in a connected state.\",\n        permissionDeniedStart: \"Invalid operation: there is already an active conversation.\",\n    };\n\n    private static readonly privDefaultParams: IRestParams = {\n        apiVersion: \"api-version\",\n        authorization: \"Authorization\",\n        clientAppId: \"X-ClientAppId\",\n        contentTypeKey: \"Content-Type\",\n        correlationId: \"X-CorrelationId\",\n        languageCode: \"language\",\n        nickname: \"nickname\",\n        profanity: \"profanity\",\n        requestId: \"X-RequestId\",\n        roomId: \"roomid\",\n        sessionToken: \"token\",\n        subscriptionKey: \"Ocp-Apim-Subscription-Key\",\n        subscriptionRegion: \"Ocp-Apim-Subscription-Region\",\n        token: \"X-CapitoToken\",\n    };\n\n}\n"]}