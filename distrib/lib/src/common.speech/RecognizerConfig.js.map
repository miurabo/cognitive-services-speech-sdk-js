{"version":3,"sources":["src/common.speech/RecognizerConfig.ts"],"names":[],"mappings":"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","file":"RecognizerConfig.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\n/* eslint-disable max-classes-per-file */\n\nimport { PropertyCollection, PropertyId } from \"../sdk/Exports\";\n\nexport enum RecognitionMode {\n    Interactive,\n    Conversation,\n    Dictation,\n}\n\nexport enum SpeechResultFormat {\n    Simple,\n    Detailed,\n}\n\nexport class RecognizerConfig {\n    private privRecognitionMode: RecognitionMode;\n    private privLanguageIdMode: string;\n    private privSpeechServiceConfig: SpeechServiceConfig;\n    private privRecognitionActivityTimeout: number;\n    private privParameters: PropertyCollection;\n    private privMaxRetryCount: number;\n    private privEnableSpeakerId: boolean;\n\n    public constructor(\n        speechServiceConfig: SpeechServiceConfig,\n        parameters: PropertyCollection) {\n        this.privSpeechServiceConfig = speechServiceConfig ? speechServiceConfig : new SpeechServiceConfig(new Context(null));\n        this.privParameters = parameters;\n        this.privMaxRetryCount = parseInt(parameters.getProperty(\"SPEECH-Error-MaxRetryCount\", \"4\"), 10);\n        this.privLanguageIdMode = parameters.getProperty(PropertyId.SpeechServiceConnection_LanguageIdMode, undefined);\n        this.privEnableSpeakerId = false;\n    }\n\n    public get parameters(): PropertyCollection {\n        return this.privParameters;\n    }\n\n    public get recognitionMode(): RecognitionMode {\n        return this.privRecognitionMode;\n    }\n\n    public set recognitionMode(value: RecognitionMode) {\n        this.privRecognitionMode = value;\n        this.privRecognitionActivityTimeout = value === RecognitionMode.Interactive ? 8000 : 25000;\n        this.privSpeechServiceConfig.Recognition = RecognitionMode[value];\n    }\n\n    public get SpeechServiceConfig(): SpeechServiceConfig {\n        return this.privSpeechServiceConfig;\n    }\n\n    public get recognitionActivityTimeout(): number {\n        return this.privRecognitionActivityTimeout;\n    }\n\n    public get isContinuousRecognition(): boolean {\n        return this.privRecognitionMode !== RecognitionMode.Interactive;\n    }\n\n    public get languageIdMode(): string {\n        return this.privLanguageIdMode;\n    }\n\n    public get autoDetectSourceLanguages(): string {\n        return this.parameters.getProperty(PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages, undefined);\n    }\n\n    public get recognitionEndpointVersion(): string {\n        return this.parameters.getProperty(PropertyId.SpeechServiceConnection_RecognitionEndpointVersion, undefined);\n    }\n\n    public get sourceLanguageModels(): { language: string; endpoint: string }[] {\n        const models: { language: string; endpoint: string }[] = [];\n        let modelsExist: boolean = false;\n        if (this.autoDetectSourceLanguages !== undefined) {\n            for (const language of this.autoDetectSourceLanguages.split(\",\")) {\n                const customProperty = language + PropertyId.SpeechServiceConnection_EndpointId.toString();\n                const modelId: string = this.parameters.getProperty(customProperty, undefined);\n                if (modelId !== undefined) {\n                    models.push( { language, endpoint: modelId });\n                    modelsExist = true;\n                } else {\n                    models.push( { language, endpoint: \"\" } );\n                }\n            }\n        }\n        return modelsExist ? models : undefined;\n    }\n\n    public get maxRetryCount(): number {\n        return this.privMaxRetryCount;\n    }\n\n    public get isSpeakerDiarizationEnabled(): boolean {\n        return this.privEnableSpeakerId;\n    }\n\n    public set isSpeakerDiarizationEnabled(value: boolean) {\n        this.privEnableSpeakerId = value;\n    }\n}\n\n// The config is serialized and sent as the Speech.Config\nexport class SpeechServiceConfig {\n    private context: Context;\n    private recognition: string;\n\n    public constructor(context: Context) {\n        this.context = context;\n    }\n\n    public serialize(): string {\n        return JSON.stringify(this, (key: any, value: { [k: string]: any }): any => {\n            if (value && typeof value === \"object\") {\n                const replacement: { [k: string ]: any } = {};\n                for (const k in value) {\n                    if (Object.hasOwnProperty.call(value, k)) {\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                        replacement[k && k.charAt(0).toLowerCase() + k.substring(1)] = value[k];\n                    }\n                }\n                return replacement;\n            }\n            return value;\n        });\n    }\n\n    public get Context(): Context {\n        return this.context;\n    }\n\n    public get Recognition(): string {\n        return this.recognition;\n    }\n\n    public set Recognition(value: string) {\n        this.recognition = value.toLowerCase();\n    }\n}\n\nexport class Context {\n    public system: System;\n    public os: OS;\n    public audio: ISpeechConfigAudio;\n\n    public constructor(os: OS) {\n        this.system = new System();\n        this.os = os;\n    }\n}\n\nexport class System {\n    public name: string;\n    public version: string;\n    public build: string;\n    public lang: string;\n\n    public constructor() {\n        // Note: below will be patched for official builds.\n        const SPEECHSDK_CLIENTSDK_VERSION = \"1.15.0-alpha.0.1\";\n\n        this.name = \"SpeechSDK\";\n        this.version = SPEECHSDK_CLIENTSDK_VERSION;\n        this.build = \"JavaScript\";\n        this.lang = \"JavaScript\";\n    }\n}\n\nexport class OS {\n    public platform: string;\n    public name: string;\n    public version: string;\n\n    public constructor(platform: string, name: string, version: string) {\n        this.platform = platform;\n        this.name = name;\n        this.version = version;\n    }\n}\n\nexport class Device {\n    public manufacturer: string;\n    public model: string;\n    public version: string;\n\n    public constructor(manufacturer: string, model: string, version: string) {\n        this.manufacturer = manufacturer;\n        this.model = model;\n        this.version = version;\n    }\n}\n\nexport interface ISpeechConfigAudio {\n    source?: ISpeechConfigAudioDevice;\n    playback?: ISpeechConfigAudioDevice;\n}\n\nexport interface ISpeechConfigAudioDevice {\n    manufacturer: string;\n    model: string;\n    connectivity: connectivity;\n    type: type;\n    samplerate: number;\n    bitspersample: number;\n    channelcount: number;\n}\n\nexport enum connectivity {\n    Bluetooth = \"Bluetooth\",\n    Wired = \"Wired\",\n    WiFi = \"WiFi\",\n    Cellular = \"Cellular\",\n    InBuilt = \"InBuilt\",\n    Unknown = \"Unknown\",\n}\n\nexport enum type {\n    Phone = \"Phone\",\n    Speaker = \"Speaker\",\n    Car = \"Car\",\n    Headset = \"Headset\",\n    Thermostat = \"Thermostat\",\n    Microphones = \"Microphones\",\n    Deskphone = \"Deskphone\",\n    RemoteControl = \"RemoteControl\",\n    Unknown = \"Unknown\",\n    File = \"File\",\n    Stream = \"Stream\",\n}\n"]}