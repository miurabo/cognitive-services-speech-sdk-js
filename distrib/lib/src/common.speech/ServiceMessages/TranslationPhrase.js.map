{"version":3,"sources":["src/common.speech/ServiceMessages/TranslationPhrase.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,kCAAkC;;;AAElC,iDAAgD;AAChD,sCAAgF;AAChF,0DAAyD;AAazD;IAGI,2BAAoB,MAA0B;QAC1C,IAAI,CAAC,qBAAqB,GAAG,MAAM,CAAC;QACpC,IAAI,CAAC,qBAAqB,CAAC,iBAAiB,GAAG,2BAAiB,CAAC,IAAI,CAAC,qBAAqB,CAAC,iBAA8D,CAAC,CAAC;QAC5J,IAAI,IAAI,CAAC,qBAAqB,CAAC,WAAW,KAAK,SAAS,EAAE;YACtD,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,iBAAiB,GAAG,qCAAiB,CAAC,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,iBAA8D,CAAC,CAAC;SACvL;IACL,CAAC;IAEa,0BAAQ,GAAtB,UAAuB,IAAY;QAC/B,OAAO,IAAI,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAuB,CAAC,CAAC;IACzE,CAAC;IAEa,yCAAuB,GAArC,UAAsC,mBAAyD;QAC3F,qBAAS,CAAC,sBAAsB,CAAC,mBAAmB,EAAE,qBAAqB,CAAC,CAAC;QAC7E,IAAM,MAAM,GAAuB,mBAAmB,CAAC,YAAY,CAAC;QACpE,mBAAmB,CAAC,YAAY,GAAG,SAAS,CAAC;QAC7C,MAAM,CAAC,WAAW,GAAI,mBAAgD,CAAC;QACvE,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,WAAW,CAAC;QACjC,OAAO,IAAI,iBAAiB,CAAC,MAAM,CAAC,CAAC;IACzC,CAAC;IAED,sBAAW,gDAAiB;aAA5B;YACI,OAAO,IAAI,CAAC,qBAAqB,CAAC,iBAAiB,CAAC;QACxD,CAAC;;;OAAA;IAED,sBAAW,qCAAM;aAAjB;YACI,OAAO,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC;QAC7C,CAAC;;;OAAA;IAED,sBAAW,uCAAQ;aAAnB;YACI,OAAO,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC;QAC/C,CAAC;;;OAAA;IAED,sBAAW,mCAAI;aAAf;YACI,OAAO,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC;QAC3C,CAAC;;;OAAA;IAED,sBAAW,uCAAQ;aAAnB;;YACI,aAAO,IAAI,CAAC,qBAAqB,CAAC,eAAe,0CAAE,QAAQ,CAAC;QAChE,CAAC;;;OAAA;IAED,sBAAW,yCAAU;aAArB;;YACI,aAAO,IAAI,CAAC,qBAAqB,CAAC,eAAe,0CAAE,UAAU,CAAC;QAClE,CAAC;;;OAAA;IAED,sBAAW,0CAAW;aAAtB;YACI,OAAO,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC;QAClD,CAAC;;;OAAA;IACL,wBAAC;AAAD,CAnDA,AAmDC,IAAA;AAnDY,8CAAiB","file":"TranslationPhrase.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\nimport { Contracts } from \"../../sdk/Contracts\";\nimport { IPrimaryLanguage, ITranslations, RecognitionStatus } from \"../Exports\";\nimport { TranslationStatus } from \"../TranslationStatus\";\n\n// translation.phrase\nexport interface ITranslationPhrase {\n    RecognitionStatus: RecognitionStatus;\n    Offset: number;\n    Duration: number;\n    Translation?: ITranslations;\n    Text: string;\n    DisplayText?: string;\n    PrimaryLanguage?: IPrimaryLanguage;\n}\n\nexport class TranslationPhrase implements ITranslationPhrase {\n    private privTranslationPhrase: ITranslationPhrase;\n\n    private constructor(phrase: ITranslationPhrase) {\n        this.privTranslationPhrase = phrase;\n        this.privTranslationPhrase.RecognitionStatus = RecognitionStatus[this.privTranslationPhrase.RecognitionStatus as unknown as keyof typeof RecognitionStatus];\n        if (this.privTranslationPhrase.Translation !== undefined) {\n            this.privTranslationPhrase.Translation.TranslationStatus = TranslationStatus[this.privTranslationPhrase.Translation.TranslationStatus as unknown as keyof typeof TranslationStatus];\n        }\n    }\n\n    public static fromJSON(json: string): TranslationPhrase {\n        return new TranslationPhrase(JSON.parse(json) as ITranslationPhrase);\n    }\n\n    public static fromTranslationResponse(translationResponse: { SpeechPhrase: ITranslationPhrase }): TranslationPhrase {\n        Contracts.throwIfNullOrUndefined(translationResponse, \"translationResponse\");\n        const phrase: ITranslationPhrase = translationResponse.SpeechPhrase;\n        translationResponse.SpeechPhrase = undefined;\n        phrase.Translation = (translationResponse as unknown as ITranslations);\n        phrase.Text = phrase.DisplayText;\n        return new TranslationPhrase(phrase);\n    }\n\n    public get RecognitionStatus(): RecognitionStatus {\n        return this.privTranslationPhrase.RecognitionStatus;\n    }\n\n    public get Offset(): number {\n        return this.privTranslationPhrase.Offset;\n    }\n\n    public get Duration(): number {\n        return this.privTranslationPhrase.Duration;\n    }\n\n    public get Text(): string {\n        return this.privTranslationPhrase.Text;\n    }\n\n    public get Language(): string {\n        return this.privTranslationPhrase.PrimaryLanguage?.Language;\n    }\n\n    public get Confidence(): string {\n        return this.privTranslationPhrase.PrimaryLanguage?.Confidence;\n    }\n\n    public get Translation(): ITranslations {\n        return this.privTranslationPhrase.Translation;\n    }\n}\n"]}