{"version":3,"sources":["src/common.speech/ServiceMessages/IntentResponse.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,kCAAkC;AAClC,WAAW;;;AAqBX;IAGI,wBAAoB,IAAY;QAC5B,IAAI,IAAI,KAAK,EAAE,EAAE;YACb,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;SAChC;aAAM;YACH,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAoB,CAAC;SACjE;IACL,CAAC;IAEa,uBAAQ,GAAtB,UAAuB,IAAY;QAC/B,OAAO,IAAI,cAAc,CAAC,IAAI,CAAC,CAAC;IACpC,CAAC;IAED,sBAAW,iCAAK;aAAhB;YACI,OAAO,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;QACzC,CAAC;;;OAAA;IAED,sBAAW,4CAAgB;aAA3B;YACI,OAAO,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC;QACpD,CAAC;;;OAAA;IAED,sBAAW,oCAAQ;aAAnB;YACI,OAAO,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC;QAC5C,CAAC;;;OAAA;IACL,qBAAC;AAAD,CA1BA,AA0BC,IAAA;AA1BY,wCAAc","file":"IntentResponse.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// response\n\nexport interface IIntentResponse {\n    query?: string;\n    topScoringIntent?: ISingleIntent;\n    entities?: IIntentEntity[];\n}\n\nexport interface IIntentEntity {\n    entity: string;\n    type: string;\n    startIndex: number;\n    endIndex: number;\n    score: number;\n}\n\nexport interface ISingleIntent {\n    intent: string;\n    score: number;\n}\n\nexport class IntentResponse implements IIntentResponse {\n    private privIntentResponse: IIntentResponse;\n\n    private constructor(json: string) {\n        if (json === \"\") {\n            this.privIntentResponse = {};\n        } else {\n            this.privIntentResponse = JSON.parse(json) as IIntentResponse;\n        }\n    }\n\n    public static fromJSON(json: string): IntentResponse {\n        return new IntentResponse(json);\n    }\n\n    public get query(): string {\n        return this.privIntentResponse.query;\n    }\n\n    public get topScoringIntent(): ISingleIntent {\n        return this.privIntentResponse.topScoringIntent;\n    }\n\n    public get entities(): IIntentEntity[] {\n        return this.privIntentResponse.entities;\n    }\n}\n"]}