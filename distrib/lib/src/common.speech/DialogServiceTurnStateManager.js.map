{"version":3,"sources":["src/common.speech/DialogServiceTurnStateManager.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,kCAAkC;;;AAElC,yCAAwD;AACxD,mEAAkE;AAElE;IAGI;QACI,IAAI,CAAC,WAAW,GAAG,IAAI,GAAG,EAAkC,CAAC;QAC7D,OAAO;IACX,CAAC;IAEM,iDAAS,GAAhB,UAAiB,EAAU;QACvB,IAAI,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;YAC1B,MAAM,IAAI,6BAAqB,CAAC,iDAAiD,GAAG,EAAE,CAAC,CAAC;SAC3F;QACD,IAAM,SAAS,GAA2B,IAAI,+CAAsB,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAC/E,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;QACpC,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IACpC,CAAC;IAEM,+CAAO,GAAd,UAAe,EAAU;QACrB,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IACpC,CAAC;IAEM,oDAAY,GAAnB,UAAoB,EAAU;QAC1B,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;YAC3B,MAAM,IAAI,6BAAqB,CAAC,0DAA0D,GAAG,EAAE,CAAC,CAAC;SACpG;QACD,IAAM,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAC3C,SAAS,CAAC,QAAQ,EAAE,CAAC;QACrB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAC5B,OAAO,SAAS,CAAC;IACrB,CAAC;IACL,oCAAC;AAAD,CA9BA,AA8BC,IAAA;AA9BY,sEAA6B","file":"DialogServiceTurnStateManager.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\nimport { InvalidOperationError } from \"../common/Error\";\nimport { DialogServiceTurnState } from \"./DialogServiceTurnState\";\n\nexport class DialogServiceTurnStateManager {\n    private privTurnMap: Map<string, DialogServiceTurnState>;\n\n    public constructor() {\n        this.privTurnMap = new Map<string, DialogServiceTurnState>();\n        return;\n    }\n\n    public StartTurn(id: string): DialogServiceTurnState {\n        if (this.privTurnMap.has(id)) {\n            throw new InvalidOperationError(\"Service error: There is already a turn with id:\" + id);\n        }\n        const turnState: DialogServiceTurnState = new DialogServiceTurnState(this, id);\n        this.privTurnMap.set(id, turnState);\n        return this.privTurnMap.get(id);\n    }\n\n    public GetTurn(id: string): DialogServiceTurnState {\n        return this.privTurnMap.get(id);\n    }\n\n    public CompleteTurn(id: string): DialogServiceTurnState {\n        if (!this.privTurnMap.has(id)) {\n            throw new InvalidOperationError(\"Service error: Received turn end for an unknown turn id:\" + id);\n        }\n        const turnState = this.privTurnMap.get(id);\n        turnState.complete();\n        this.privTurnMap.delete(id);\n        return turnState;\n    }\n}\n"]}