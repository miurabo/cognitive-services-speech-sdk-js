{"version":3,"sources":["src/common.speech/Transcription/ConversationTranslatorEventArgs.ts"],"names":[],"mappings":"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","file":"ConversationTranslatorEventArgs.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/* eslint-disable max-classes-per-file */\nimport { ConversationTranslationResult, SessionEventArgs } from \"../../sdk/Exports\";\nimport { IInternalParticipant } from \"./ConversationTranslatorInterfaces\";\n\nexport class MuteAllEventArgs extends SessionEventArgs {\n    private privIsMuted: boolean;\n\n    public constructor(isMuted: boolean, sessionId?: string) {\n        super(sessionId);\n\n        this.privIsMuted = isMuted;\n    }\n\n    public get isMuted(): boolean {\n        return this.privIsMuted;\n    }\n}\n\nexport class LockRoomEventArgs extends SessionEventArgs {\n    private privIsLocked: boolean;\n\n    public constructor(isLocked: boolean, sessionId?: string) {\n        super(sessionId);\n\n        this.privIsLocked = isLocked;\n    }\n\n    public get isMuted(): boolean {\n        return this.privIsLocked;\n    }\n}\n\nexport class ParticipantEventArgs extends SessionEventArgs {\n    private privParticipant: IInternalParticipant;\n\n    public constructor(participant: IInternalParticipant, sessionId?: string) {\n        super(sessionId);\n        this.privParticipant = participant;\n    }\n\n    public get participant(): IInternalParticipant {\n        return this.privParticipant;\n    }\n}\n\nexport class ParticipantAttributeEventArgs extends SessionEventArgs {\n    private privValue: boolean | number | string | string[];\n    private privKey: string;\n    private privParticipantId: string;\n\n    public constructor(participantId: string, key: string, value: boolean | number | string |  string[], sessionId?: string) {\n        super(sessionId);\n\n        this.privKey = key;\n        this.privValue = value;\n        this.privParticipantId = participantId;\n    }\n\n    public get value(): boolean | number | string |  string[] {\n        return this.privValue;\n    }\n\n    public get key(): string {\n        return this.privKey;\n    }\n    public get id(): string {\n        return this.privParticipantId;\n    }\n}\n\nexport class ParticipantsListEventArgs extends SessionEventArgs {\n\n    private privRoomId: string;\n    private privSessionToken: string;\n    private privTranslateTo: string[];\n    private privProfanityFilter: string;\n    private privRoomProfanityFilter: string;\n    private privIsRoomLocked: boolean;\n    private privIsMuteAll: boolean;\n    private privParticipants: IInternalParticipant[];\n\n    public constructor(conversationId: string, token: string, translateTo: string[], profanityFilter: string,\n                       roomProfanityFilter: string, isRoomLocked: boolean, isMuteAll: boolean, participants: IInternalParticipant[], sessionId?: string) {\n        super(sessionId);\n        this.privRoomId = conversationId;\n        this.privSessionToken = token;\n        this.privTranslateTo = translateTo;\n        this.privProfanityFilter = profanityFilter;\n        this.privRoomProfanityFilter = roomProfanityFilter;\n        this.privIsRoomLocked = isRoomLocked;\n        this.privIsRoomLocked = isMuteAll;\n        this.privParticipants = participants;\n    }\n    public get sessionToken(): string {\n        return this.privSessionToken;\n    }\n\n    public get conversationId(): string {\n        return this.privRoomId;\n    }\n\n    public get translateTo(): string[] {\n        return this.privTranslateTo;\n    }\n\n    public get profanityFilter(): string {\n        return this.privProfanityFilter;\n    }\n\n    public get roomProfanityFilter(): string {\n        return this.privRoomProfanityFilter;\n    }\n\n    public get isRoomLocked(): boolean {\n        return this.privIsRoomLocked;\n    }\n\n    public get isMuteAll(): boolean {\n        return this.privIsMuteAll;\n    }\n\n    public get participants(): IInternalParticipant[] {\n        return this.privParticipants;\n    }\n}\n\nexport class ConversationReceivedTranslationEventArgs {\n    private privPayload: ConversationTranslationResult;\n    private privCommand: string;\n    private privSessionId: string;\n\n    public constructor(command: string, payload: ConversationTranslationResult,  sessionId?: string) {\n        this.privPayload = payload;\n        this.privCommand = command;\n        this.privSessionId = sessionId;\n    }\n\n    public get payload(): ConversationTranslationResult {\n        return this.privPayload;\n    }\n\n    public get command(): string {\n        return this.privCommand;\n    }\n\n    public get sessionId(): string {\n        return this.privSessionId;\n    }\n}\n"]}