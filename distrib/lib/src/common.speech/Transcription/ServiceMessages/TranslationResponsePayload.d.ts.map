{"version":3,"sources":["src/common.speech/Transcription/ServiceMessages/TranslationResponsePayload.ts"],"names":[],"mappings":"AAIA;;GAEG;AACH,MAAM,WAAW,2BAA2B;IACxC,IAAI,EAAE,MAAM,CAAC;IACb,WAAW,EAAE,MAAM,CAAC;CACvB;AAED,MAAM,WAAW,0BAA0B;IACvC,YAAY,EAAE,2BAA2B,EAAE,CAAC;IAC5C,EAAE,EAAE,MAAM,CAAC;IACX,QAAQ,EAAE,MAAM,CAAC;IACjB,QAAQ,EAAE,MAAM,CAAC;IACjB,aAAa,EAAE,MAAM,CAAC;IACtB,MAAM,EAAE,MAAM,CAAC;IACf,SAAS,EAAE,MAAM,CAAC;IAClB,IAAI,EAAE,MAAM,CAAC;CAChB;AAED,MAAM,WAAW,sBAAuB,SAAQ,0BAA0B;IACtE,WAAW,EAAE,MAAM,CAAC;IACpB,OAAO,EAAE,OAAO,CAAC;CACpB;AAED,MAAM,WAAW,oBAAqB,SAAQ,0BAA0B;IACpE,YAAY,EAAE,MAAM,CAAC;CACxB;AAKD,qBAAa,qBAAsB,YAAW,sBAAsB;IAEhE,OAAO,CAAC,kBAAkB,CAAyB;IAEnD,OAAO;IAIP,IAAW,WAAW,IAAI,MAAM,CAE/B;IAED,IAAW,YAAY,IAAI,2BAA2B,EAAE,CAEvD;IAED,IAAW,EAAE,IAAI,MAAM,CAEtB;IAED,IAAW,QAAQ,IAAI,MAAM,CAE5B;IAED,IAAW,QAAQ,IAAI,MAAM,CAE5B;IAED,IAAW,aAAa,IAAI,MAAM,CAEjC;IAED,IAAW,MAAM,IAAI,MAAM,CAE1B;IAED,IAAW,SAAS,IAAI,MAAM,CAE7B;IAED,IAAW,IAAI,IAAI,MAAM,CAExB;IAED,IAAW,OAAO,IAAI,OAAO,CAE5B;WAEa,QAAQ,CAAC,IAAI,EAAE,MAAM,GAAG,qBAAqB;CAI9D;AAED,qBAAa,mBAAoB,YAAW,oBAAoB;IAE5D,OAAO,CAAC,gBAAgB,CAAuB;IAE/C,OAAO;IAIP,IAAW,YAAY,IAAI,MAAM,CAEhC;IAED,IAAW,YAAY,IAAI,2BAA2B,EAAE,CAEvD;IAED,IAAW,EAAE,IAAI,MAAM,CAEtB;IAED,IAAW,QAAQ,IAAI,MAAM,CAE5B;IAED,IAAW,QAAQ,IAAI,MAAM,CAE5B;IAED,IAAW,aAAa,IAAI,MAAM,CAEjC;IAED,IAAW,MAAM,IAAI,MAAM,CAE1B;IAED,IAAW,SAAS,IAAI,MAAM,CAE7B;IAED,IAAW,IAAI,IAAI,MAAM,CAExB;WAEa,QAAQ,CAAC,IAAI,EAAE,MAAM,GAAG,mBAAmB;CAI5D","file":"TranslationResponsePayload.d.ts","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\n/* eslint-disable max-classes-per-file */\n/**\n * Defines the payload for incoming translation messages\n */\nexport interface ITranslationResponsePayload {\n    lang: string;\n    translation: string;\n}\n\nexport interface ITranslationCommandMessage {\n    translations: ITranslationResponsePayload[];\n    id: string;\n    language: string;\n    nickname: string;\n    participantId: string;\n    roomid: string;\n    timestamp: string;\n    type: string;\n}\n\nexport interface ISpeechResponsePayload extends ITranslationCommandMessage {\n    recognition: string;\n    isFinal: boolean;\n}\n\nexport interface ITextResponsePayload extends ITranslationCommandMessage {\n    originalText: string;\n}\n\nconst parseSpeechResponse = (json: string): ISpeechResponsePayload => JSON.parse(json) as ISpeechResponsePayload;\nconst parseTextResponse = (json: string): ITextResponsePayload => JSON.parse(json) as ITextResponsePayload;\n\nexport class SpeechResponsePayload implements ISpeechResponsePayload {\n\n    private privSpeechResponse: ISpeechResponsePayload;\n\n    private constructor(json: string) {\n        this.privSpeechResponse = parseSpeechResponse(json);\n    }\n\n    public get recognition(): string {\n        return this.privSpeechResponse.recognition;\n    }\n\n    public get translations(): ITranslationResponsePayload[] {\n        return this.privSpeechResponse.translations;\n    }\n\n    public get id(): string {\n        return this.privSpeechResponse.id;\n    }\n\n    public get language(): string {\n        return this.privSpeechResponse.language;\n    }\n\n    public get nickname(): string {\n        return this.privSpeechResponse.nickname;\n    }\n\n    public get participantId(): string {\n        return this.privSpeechResponse.participantId;\n    }\n\n    public get roomid(): string {\n        return this.privSpeechResponse.roomid;\n    }\n\n    public get timestamp(): string {\n        return this.privSpeechResponse.timestamp;\n    }\n\n    public get type(): string {\n        return this.privSpeechResponse.type;\n    }\n\n    public get isFinal(): boolean {\n        return this.privSpeechResponse.type === \"final\";\n    }\n\n    public static fromJSON(json: string): SpeechResponsePayload {\n        return new SpeechResponsePayload(json);\n    }\n\n}\n\nexport class TextResponsePayload implements ITextResponsePayload {\n\n    private privTextResponse: ITextResponsePayload;\n\n    private constructor(json: string) {\n        this.privTextResponse = parseTextResponse(json);\n    }\n\n    public get originalText(): string {\n        return this.privTextResponse.originalText;\n    }\n\n    public get translations(): ITranslationResponsePayload[] {\n        return this.privTextResponse.translations;\n    }\n\n    public get id(): string {\n        return this.privTextResponse.id;\n    }\n\n    public get language(): string {\n        return this.privTextResponse.language;\n    }\n\n    public get nickname(): string {\n        return this.privTextResponse.nickname;\n    }\n\n    public get participantId(): string {\n        return this.privTextResponse.participantId;\n    }\n\n    public get roomid(): string {\n        return this.privTextResponse.roomid;\n    }\n\n    public get timestamp(): string {\n        return this.privTextResponse.timestamp;\n    }\n\n    public get type(): string {\n        return this.privTextResponse.type;\n    }\n\n    public static fromJSON(json: string): TextResponsePayload {\n        return new TextResponsePayload(json);\n    }\n\n}\n"]}