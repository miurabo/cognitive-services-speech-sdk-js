{"version":3,"sources":["src/common.speech/Transcription/ServiceMessages/ParticipantResponsePayload.ts"],"names":[],"mappings":"AAIA;;GAEG;AACH,MAAM,WAAW,gCAAgC;IAC7C,MAAM,EAAE,MAAM,CAAC;IACf,EAAE,EAAE,MAAM,CAAC;IACX,OAAO,EAAE,MAAM,CAAC;IAChB,YAAY,EAAE,2BAA2B,EAAE,CAAC;IAC5C,KAAK,EAAE,MAAM,CAAC;IACd,WAAW,EAAE,MAAM,EAAE,CAAC;IACtB,eAAe,EAAE,MAAM,CAAC;IACxB,mBAAmB,EAAE,MAAM,CAAC;IAC5B,UAAU,EAAE,OAAO,CAAC;IACpB,OAAO,EAAE,OAAO,CAAC;IACjB,IAAI,EAAE,MAAM,CAAC;CAChB;AAED;;GAEG;AACH,MAAM,WAAW,2BAA2B;IACxC,QAAQ,EAAE,MAAM,CAAC;IACjB,MAAM,EAAE,MAAM,CAAC;IACf,MAAM,EAAE,OAAO,CAAC;IAChB,OAAO,EAAE,OAAO,CAAC;IACjB,MAAM,EAAE,OAAO,CAAC;IAChB,aAAa,EAAE,MAAM,CAAC;IACtB,MAAM,CAAC,EAAE,MAAM,CAAC;CACnB;AAKD,qBAAa,+BAAgC,YAAW,gCAAgC;IACpF,OAAO,CAAC,+BAA+B,CAAmC;IAE1E,OAAO;IAIP,IAAW,MAAM,IAAI,MAAM,CAE1B;IAED,IAAW,EAAE,IAAI,MAAM,CAEtB;IAED,IAAW,OAAO,IAAI,MAAM,CAE3B;IAED,IAAW,YAAY,IAAI,2BAA2B,EAAE,CAEvD;IAED,IAAW,KAAK,IAAI,MAAM,CAEzB;IAED,IAAW,WAAW,IAAI,MAAM,EAAE,CAEjC;IAED,IAAW,eAAe,IAAI,MAAM,CAEnC;IAED,IAAW,mBAAmB,IAAI,MAAM,CAEvC;IAED,IAAW,UAAU,IAAI,OAAO,CAE/B;IAED,IAAW,OAAO,IAAI,OAAO,CAE5B;IAED,IAAW,IAAI,IAAI,MAAM,CAExB;WAEa,QAAQ,CAAC,IAAI,EAAE,MAAM,GAAG,+BAA+B;CAIxE;AAED,qBAAa,0BAA2B,YAAW,2BAA2B;IAE1E,OAAO,CAAC,8BAA8B,CAA8B;IAEpE,OAAO;IAIP,IAAW,QAAQ,IAAI,MAAM,CAE5B;IAED,IAAW,MAAM,IAAI,MAAM,CAE1B;IAED,IAAW,MAAM,IAAI,OAAO,CAE3B;IAED,IAAW,OAAO,IAAI,OAAO,CAE5B;IAED,IAAW,MAAM,IAAI,OAAO,CAE3B;IAED,IAAW,aAAa,IAAI,MAAM,CAEjC;IAED,IAAW,MAAM,IAAI,MAAM,CAE1B;WAEa,QAAQ,CAAC,IAAI,EAAE,MAAM,GAAG,0BAA0B;CAInE","file":"ParticipantResponsePayload.d.ts","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\n/* eslint-disable max-classes-per-file */\n/**\n * Defines the payload for incoming list of participants\n */\nexport interface IParticipantsListPayloadResponse {\n    roomid: string;\n    id: string;\n    command: string;\n    participants: IParticipantPayloadResponse[];\n    token: string;\n    translateTo: string[];\n    profanityFilter: string;\n    roomProfanityFilter: string;\n    roomLocked: boolean;\n    muteAll: boolean;\n    type: string;\n}\n\n/**\n * Defines the payload for incoming participant\n */\nexport interface IParticipantPayloadResponse {\n    nickname: string;\n    locale: string;\n    usetts: boolean;\n    ismuted: boolean;\n    ishost: boolean;\n    participantId: string;\n    avatar?: string;\n}\n\nconst parseListResponse = (json: string): IParticipantsListPayloadResponse => JSON.parse(json) as IParticipantsListPayloadResponse;\nconst parseParticipantResponse = (json: string): IParticipantPayloadResponse => JSON.parse(json) as IParticipantPayloadResponse;\n\nexport class ParticipantsListPayloadResponse implements IParticipantsListPayloadResponse {\n    private privParticipantsPayloadResponse: IParticipantsListPayloadResponse;\n\n    private constructor(json: string) {\n        this.privParticipantsPayloadResponse = parseListResponse(json);\n    }\n\n    public get roomid(): string {\n        return this.privParticipantsPayloadResponse.roomid;\n    }\n\n    public get id(): string {\n        return this.privParticipantsPayloadResponse.id;\n    }\n\n    public get command(): string {\n        return this.privParticipantsPayloadResponse.command;\n    }\n\n    public get participants(): IParticipantPayloadResponse[] {\n        return this.privParticipantsPayloadResponse.participants;\n    }\n\n    public get token(): string {\n        return this.privParticipantsPayloadResponse.token;\n    }\n\n    public get translateTo(): string[] {\n        return this.privParticipantsPayloadResponse.translateTo;\n    }\n\n    public get profanityFilter(): string {\n        return this.privParticipantsPayloadResponse.profanityFilter;\n    }\n\n    public get roomProfanityFilter(): string {\n        return this.privParticipantsPayloadResponse.roomProfanityFilter;\n    }\n\n    public get roomLocked(): boolean {\n        return this.privParticipantsPayloadResponse.roomLocked;\n    }\n\n    public get muteAll(): boolean {\n        return this.privParticipantsPayloadResponse.muteAll;\n    }\n\n    public get type(): string {\n        return this.privParticipantsPayloadResponse.type;\n    }\n\n    public static fromJSON(json: string): ParticipantsListPayloadResponse {\n        return new ParticipantsListPayloadResponse(json);\n    }\n\n}\n\nexport class ParticipantPayloadResponse implements IParticipantPayloadResponse {\n\n    private privParticipantPayloadResponse: IParticipantPayloadResponse;\n\n    private constructor(json: string) {\n        this.privParticipantPayloadResponse = parseParticipantResponse(json);\n    }\n\n    public get nickname(): string {\n        return this.privParticipantPayloadResponse.nickname;\n    }\n\n    public get locale(): string {\n        return this.privParticipantPayloadResponse.locale;\n    }\n\n    public get usetts(): boolean {\n        return this.privParticipantPayloadResponse.usetts;\n    }\n\n    public get ismuted(): boolean {\n        return this.privParticipantPayloadResponse.ismuted;\n    }\n\n    public get ishost(): boolean {\n        return this.privParticipantPayloadResponse.ishost;\n    }\n\n    public get participantId(): string {\n        return this.privParticipantPayloadResponse.participantId;\n    }\n\n    public get avatar(): string {\n        return this.privParticipantPayloadResponse.avatar;\n    }\n\n    public static fromJSON(json: string): ParticipantPayloadResponse {\n        return new ParticipantPayloadResponse(json);\n    }\n\n}\n"]}