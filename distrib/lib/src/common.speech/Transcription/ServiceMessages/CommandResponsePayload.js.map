{"version":3,"sources":["src/common.speech/Transcription/ServiceMessages/CommandResponsePayload.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,kCAAkC;;;AAgBlC,IAAM,oBAAoB,GAAG,UAAC,IAAY,IAA8B,OAAA,IAAI,CAAC,KAAK,CAAC,IAAI,CAA4B,EAA3C,CAA2C,CAAC;AAEpH;IAGI,gCAAmB,IAAY;QAC3B,IAAI,CAAC,mBAAmB,GAAG,oBAAoB,CAAC,IAAI,CAAC,CAAC;IAC1D,CAAC;IAED,sBAAW,wCAAI;aAAf;YACI,OAAO,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC;QACzC,CAAC;;;OAAA;IACD,sBAAW,2CAAO;aAAlB;YACI,OAAO,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC;QAC5C,CAAC;;;OAAA;IACD,sBAAW,sCAAE;aAAb;YACI,OAAO,IAAI,CAAC,mBAAmB,CAAC,EAAE,CAAC;QACvC,CAAC;;;OAAA;IACD,sBAAW,4CAAQ;aAAnB;YACI,OAAO,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC;QAC7C,CAAC;;;OAAA;IACD,sBAAW,iDAAa;aAAxB;YACI,OAAO,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC;QAClD,CAAC;;;OAAA;IACD,sBAAW,0CAAM;aAAjB;YACI,OAAO,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC;QAC3C,CAAC;;;OAAA;IACD,sBAAW,yCAAK;aAAhB;YACI,OAAO,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC;QAC1C,CAAC;;;OAAA;IACD,sBAAW,yCAAK;aAAhB;YACI,OAAO,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC;QAC1C,CAAC;;;OAAA;IAEa,+BAAQ,GAAtB,UAAuB,IAAY;QAC/B,OAAO,IAAI,sBAAsB,CAAC,IAAI,CAAC,CAAC;IAC5C,CAAC;IAEL,6BAAC;AAAD,CApCA,AAoCC,IAAA;AApCY,wDAAsB","file":"CommandResponsePayload.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\n/**\n * Defines the payload for incoming websocket commands\n */\nexport interface ICommandResponsePayload {\n    type: string;\n    command?: string;\n    id?: string; // incoming ws\n    nickname?: string; // incoming ws\n    participantId?: string;\n    roomid?: string;\n    value: boolean | number | string;\n    token?: string;\n}\n\nconst parseCommandResponse = (json: string): ICommandResponsePayload => JSON.parse(json) as ICommandResponsePayload;\n\nexport class CommandResponsePayload implements ICommandResponsePayload {\n    private privCommandResponse: ICommandResponsePayload;\n\n    public constructor(json: string) {\n        this.privCommandResponse = parseCommandResponse(json);\n    }\n\n    public get type(): string {\n        return this.privCommandResponse.type;\n    }\n    public get command(): string {\n        return this.privCommandResponse.command;\n    }\n    public get id(): string {\n        return this.privCommandResponse.id;\n    }\n    public get nickname(): string {\n        return this.privCommandResponse.nickname;\n    }\n    public get participantId(): string {\n        return this.privCommandResponse.participantId;\n    }\n    public get roomid(): string {\n        return this.privCommandResponse.roomid;\n    }\n    public get value(): boolean | number | string {\n        return this.privCommandResponse.value;\n    }\n    public get token(): string {\n        return this.privCommandResponse.token;\n    }\n\n    public static fromJSON(json: string): CommandResponsePayload {\n        return new CommandResponsePayload(json);\n    }\n\n}\n"]}