{"version":3,"sources":["src/common.speech/Transcription/ConversationConnectionMessage.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,WAAW,EAAE,MAAM,sBAAsB,CAAC;AAEzF,qBAAa,6BAA8B,SAAQ,iBAAiB;IAChE,OAAO,CAAC,2BAA2B,CAAS;gBAGxC,WAAW,EAAE,WAAW,EACxB,IAAI,EAAE,GAAG,EACT,OAAO,CAAC,EAAE,iBAAiB,CAAC,MAAM,CAAC,EACnC,EAAE,CAAC,EAAE,MAAM;IAQf,IAAW,uBAAuB,IAAI,MAAM,CAE3C;CACJ","file":"ConversationConnectionMessage.d.ts","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\nimport { ConnectionMessage, IStringDictionary, MessageType } from \"../../common/Exports\";\n\nexport class ConversationConnectionMessage extends ConnectionMessage {\n    private privConversationMessageType: string;\n\n    public constructor(\n        messageType: MessageType,\n        body: any,\n        headers?: IStringDictionary<string>,\n        id?: string) {\n            super(messageType, body, headers, id);\n            const json: { type: string } = JSON.parse(this.textBody) as { type: string };\n            if (json.type !== undefined) {\n                this.privConversationMessageType = json.type;\n            }\n    }\n\n    public get conversationMessageType(): string {\n        return this.privConversationMessageType;\n    }\n}\n"]}