{"version":3,"sources":["src/common.speech/SpeechContext.ts"],"names":[],"mappings":"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","file":"SpeechContext.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\nimport {\n    DynamicGrammarBuilder,\n    IDynamicGrammar,\n} from \"./Exports\";\n\ninterface Context {\n    [section: string]: any;\n}\n\ninterface PhraseContext {\n    [section: string]: any;\n    phraseDetection?: {\n        enrichment?: {\n            pronunciationAssessment: any;\n        };\n        speakerDiarization?: {\n            mode?: string;\n            audioSessionId?: string;\n            audioOffsetMs?: number;\n            identityProvider?: string;\n        };\n        mode?: string;\n    };\n    phraseOutput?: {\n        detailed?: {\n            options?: string[];\n        };\n        format?: any;\n    };\n}\n\n/**\n * Represents the JSON used in the speech.context message sent to the speech service.\n * The dynamic grammar is always refreshed from the encapsulated dynamic grammar object.\n */\nexport class SpeechContext {\n    private privContext: PhraseContext = {};\n    private privDynamicGrammar: DynamicGrammarBuilder;\n\n    public constructor(dynamicGrammar: DynamicGrammarBuilder) {\n        this.privDynamicGrammar = dynamicGrammar;\n    }\n\n    /**\n     * Gets a section of the speech.context object.\n     * @param sectionName Name of the section to get.\n     * @return string or Context JSON serializable object that represents the value.\n     */\n    public getSection(sectionName: string): string | Context {\n        return (this.privContext[sectionName] || {}) as string | Context;\n    }\n\n    /**\n     * Adds a section to the speech.context object.\n     * @param sectionName Name of the section to add.\n     * @param value JSON serializable object that represents the value.\n     */\n    public setSection(sectionName: string, value: string | Context): void {\n        this.privContext[sectionName] = value;\n    }\n\n    /**\n     * @Internal\n     * This is only used by pronunciation assessment config.\n     * Do not use externally, object returned will change without warning or notice.\n     */\n    public setPronunciationAssessmentParams(params: string, isSpeakerDiarizationEnabled: boolean = false): void {\n        if (this.privContext.phraseDetection === undefined) {\n            this.privContext.phraseDetection = {\n                enrichment: {\n                    pronunciationAssessment: {}\n                }\n            };\n        }\n        if (this.privContext.phraseDetection.enrichment === undefined) {\n            this.privContext.phraseDetection.enrichment = {\n                pronunciationAssessment: {}\n            };\n        }\n        this.privContext.phraseDetection.enrichment.pronunciationAssessment = JSON.parse(params) as Context;\n        if (isSpeakerDiarizationEnabled) {\n            this.privContext.phraseDetection.mode = \"Conversation\";\n        }\n        this.setWordLevelTimings();\n        this.privContext.phraseOutput.detailed.options.push(\"PronunciationAssessment\");\n        if (this.privContext.phraseOutput.detailed.options.indexOf(\"SNR\") === -1) {\n            this.privContext.phraseOutput.detailed.options.push(\"SNR\");\n        }\n    }\n\n    public setDetailedOutputFormat(): void {\n        if (this.privContext.phraseOutput === undefined) {\n            this.privContext.phraseOutput = {\n                detailed: {\n                    options: []\n                },\n                format: {}\n            };\n        }\n        if (this.privContext.phraseOutput.detailed === undefined) {\n            this.privContext.phraseOutput.detailed = {\n                options: []\n            };\n        }\n        this.privContext.phraseOutput.format = \"Detailed\";\n    }\n\n    public setWordLevelTimings(): void {\n        if (this.privContext.phraseOutput === undefined) {\n            this.privContext.phraseOutput = {\n                detailed: {\n                    options: []\n                },\n                format: {}\n            };\n        }\n        if (this.privContext.phraseOutput.detailed === undefined) {\n            this.privContext.phraseOutput.detailed = {\n                options: []\n            };\n        }\n        this.privContext.phraseOutput.format = \"Detailed\";\n        if (this.privContext.phraseOutput.detailed.options.indexOf(\"WordTimings\") === -1) {\n            this.privContext.phraseOutput.detailed.options.push(\"WordTimings\");\n        }\n    }\n\n    public setSpeakerDiarizationAudioOffsetMs(audioOffsetMs: number): void {\n        this.privContext.phraseDetection.speakerDiarization.audioOffsetMs = audioOffsetMs;\n    }\n\n    public toJSON(): string {\n\n        const dgi: IDynamicGrammar = this.privDynamicGrammar.generateGrammarObject();\n        this.setSection(\"dgi\", dgi);\n\n        const ret: string = JSON.stringify(this.privContext);\n        return ret;\n    }\n}\n"]}