{"version":3,"sources":["src/common.speech/EnumTranslation.ts"],"names":[],"mappings":"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","file":"EnumTranslation.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\nimport {\n    CancellationErrorCode,\n    CancellationReason,\n    ResultReason\n} from \"../sdk/Exports\";\nimport { RecognitionStatus } from \"./Exports\";\n\nexport class EnumTranslation {\n    public static implTranslateRecognitionResult(recognitionStatus: RecognitionStatus): ResultReason {\n        let reason = ResultReason.Canceled;\n        switch (recognitionStatus) {\n            case RecognitionStatus.Success:\n                reason = ResultReason.RecognizedSpeech;\n                break;\n            case RecognitionStatus.NoMatch:\n            case RecognitionStatus.InitialSilenceTimeout:\n            case RecognitionStatus.BabbleTimeout:\n            case RecognitionStatus.EndOfDictation:\n                reason = ResultReason.NoMatch;\n                break;\n            case RecognitionStatus.Error:\n            case RecognitionStatus.BadRequest:\n            case RecognitionStatus.Forbidden:\n            default:\n                reason = ResultReason.Canceled;\n                break;\n        }\n        return reason;\n    }\n\n    public static implTranslateCancelResult(recognitionStatus: RecognitionStatus): CancellationReason {\n        let reason = CancellationReason.EndOfStream;\n        switch (recognitionStatus) {\n            case RecognitionStatus.Success:\n            case RecognitionStatus.EndOfDictation:\n            case RecognitionStatus.NoMatch:\n                reason = CancellationReason.EndOfStream;\n                break;\n            case RecognitionStatus.InitialSilenceTimeout:\n            case RecognitionStatus.BabbleTimeout:\n            case RecognitionStatus.Error:\n            case RecognitionStatus.BadRequest:\n            case RecognitionStatus.Forbidden:\n            default:\n                reason = CancellationReason.Error;\n                break;\n        }\n        return reason;\n    }\n\n    public static implTranslateCancelErrorCode(recognitionStatus: RecognitionStatus): CancellationErrorCode {\n        let reason: CancellationErrorCode = CancellationErrorCode.NoError;\n        switch (recognitionStatus) {\n            case RecognitionStatus.Error:\n                reason = CancellationErrorCode.ServiceError;\n                break;\n            case RecognitionStatus.TooManyRequests:\n                reason = CancellationErrorCode.TooManyRequests;\n                break;\n            case RecognitionStatus.BadRequest:\n                reason = CancellationErrorCode.BadRequestParameters;\n                break;\n            case RecognitionStatus.Forbidden:\n                reason = CancellationErrorCode.Forbidden;\n                break;\n            default:\n                reason = CancellationErrorCode.NoError;\n                break;\n        }\n\n        return reason;\n\n    }\n\n    public static implTranslateErrorDetails(cancellationErrorCode: CancellationErrorCode): string {\n        let errorDetails: string = \"The speech service encountered an internal error and could not continue.\";\n        switch (cancellationErrorCode) {\n            case CancellationErrorCode.Forbidden:\n                errorDetails = \"The recognizer is using a free subscription that ran out of quota.\";\n                break;\n            case CancellationErrorCode.BadRequestParameters:\n                errorDetails = \"Invalid parameter or unsupported audio format in the request.\";\n                break;\n            case CancellationErrorCode.TooManyRequests:\n                errorDetails = \"The number of parallel requests exceeded the number of allowed concurrent transcriptions.\";\n                break;\n            default:\n                break;\n        }\n        return errorDetails;\n    }\n\n}\n"]}