{"version":3,"sources":["src/sdk/AutoDetectSourceLanguageResult.ts"],"names":[],"mappings":"AAIA,OAAO,EACH,uBAAuB,EACvB,+BAA+B,EAClC,MAAM,WAAW,CAAC;AAEnB;;;GAGG;AACH,qBAAa,8BAA8B;IAEvC,OAAO,CAAC,YAAY,CAAS;IAC7B,OAAO,CAAC,+BAA+B,CAAS;IAEhD,OAAO;IAOP;;;;;;;OAOG;WACW,UAAU,CAAC,MAAM,EAAE,uBAAuB,GAAG,8BAA8B;IAIzF;;;;;;;OAOG;WACe,mCAAmC,CAAC,MAAM,EAAE,+BAA+B,GAAG,8BAA8B;IAI9H,IAAW,QAAQ,IAAI,MAAM,CAE5B;IAED,IAAW,2BAA2B,IAAI,MAAM,CAE/C;CACJ","file":"AutoDetectSourceLanguageResult.d.ts","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\nimport { Contracts } from \"./Contracts\";\nimport {\n    SpeechRecognitionResult,\n    ConversationTranscriptionResult\n} from \"./Exports\";\n\n/**\n * Output format\n * @class AutoDetectSourceLanguageResult\n */\nexport class AutoDetectSourceLanguageResult {\n\n    private privLanguage: string;\n    private privLanguageDetectionConfidence: string;\n\n    private constructor(language: string, languageDetectionConfidence: string) {\n        Contracts.throwIfNullOrUndefined(language, \"language\");\n        Contracts.throwIfNullOrUndefined(languageDetectionConfidence, \"languageDetectionConfidence\");\n        this.privLanguage = language;\n        this.privLanguageDetectionConfidence = languageDetectionConfidence;\n    }\n\n    /**\n     * Creates an instance of AutoDetectSourceLanguageResult object from a SpeechRecognitionResult instance.\n     * @member AutoDetectSourceLanguageResult.fromResult\n     * @function\n     * @public\n     * @param {SpeechRecognitionResult} result - The recognition result.\n     * @returns {AutoDetectSourceLanguageResult} AutoDetectSourceLanguageResult object being created.\n     */\n    public static fromResult(result: SpeechRecognitionResult): AutoDetectSourceLanguageResult {\n        return new AutoDetectSourceLanguageResult(result.language, result.languageDetectionConfidence);\n    }\n\n    /**\n     * Creates an instance of AutoDetectSourceLanguageResult object from a ConversationTranscriptionResult instance.\n     * @member AutoDetectSourceLanguageResult.fromConversationTranscriptionResult\n     * @function\n     * @public\n     * @param {ConversationTranscriptionResult} result - The transcription result.\n     * @returns {AutoDetectSourceLanguageResult} AutoDetectSourceLanguageResult object being created.\n     */\n        public static fromConversationTranscriptionResult(result: ConversationTranscriptionResult): AutoDetectSourceLanguageResult {\n            return new AutoDetectSourceLanguageResult(result.language, result.languageDetectionConfidence);\n        }\n\n    public get language(): string {\n        return this.privLanguage;\n    }\n\n    public get languageDetectionConfidence(): string {\n        return this.privLanguageDetectionConfidence;\n    }\n}\n"]}