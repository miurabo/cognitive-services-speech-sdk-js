{"version":3,"sources":["src/sdk/PronunciationAssessmentResult.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,kCAAkC;AAElC,OAAO,EAAC,SAAS,EAAC,MAAM,aAAa,CAAC;AACtC,OAAO,EACH,UAAU,EAEb,MAAM,WAAW,CAAC;AA+BnB;;;;GAIG;AACH,MAAM,OAAO,6BAA6B;IAGtC,YAAoB,UAAkB;QAClC,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAqB,CAAC;QACrD,SAAS,CAAC,sBAAsB,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;QACtD,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACnC,CAAC;IAED;;;;;;;OAOG;IACI,MAAM,CAAC,UAAU,CAAC,MAAyB;QAC9C,SAAS,CAAC,sBAAsB,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QACnD,MAAM,IAAI,GAAW,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,UAAU,CAAC,gCAAgC,CAAC,CAAC;QAChG,SAAS,CAAC,sBAAsB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAC/C,OAAO,IAAI,6BAA6B,CAAC,IAAI,CAAC,CAAC;IACnD,CAAC;IAED;;;;;;OAMG;IACH,IAAW,YAAY;QACnB,OAAO,IAAI,CAAC,YAAY,CAAC;IAC7B,CAAC;IAED;;;;;;;OAOG;IACH,IAAW,aAAa;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC,uBAAuB,CAAC,aAAa,CAAC;IACnE,CAAC;IAED;;;;;;;OAOG;IACH,IAAW,kBAAkB;QACzB,OAAO,IAAI,CAAC,YAAY,CAAC,uBAAuB,CAAC,SAAS,CAAC;IAC/D,CAAC;IAED;;;;;;OAMG;IACH,IAAW,iBAAiB;QACxB,OAAO,IAAI,CAAC,YAAY,CAAC,uBAAuB,CAAC,iBAAiB,CAAC;IACvE,CAAC;IAED;;;;;;OAMG;IACH,IAAW,YAAY;QACnB,OAAO,IAAI,CAAC,YAAY,CAAC,uBAAuB,CAAC,YAAY,CAAC;IAClE,CAAC;CACJ","file":"PronunciationAssessmentResult.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\nimport {Contracts} from \"./Contracts\";\nimport {\n    PropertyId,\n    RecognitionResult\n} from \"./Exports\";\n\ninterface AssessmentResult {\n    NBest: DetailResult[];\n}\n\ninterface DetailResult {\n    Words: WordResult[];\n    PronunciationAssessment: {\n        AccuracyScore: number;\n        CompletenessScore: number;\n        FluencyScore: number;\n        PronScore: number;\n    };\n}\n\ninterface WordResult {\n    Word: string;\n    Phonemes: {\n        Phoneme?: string;\n        PronunciationAssessment?: {\n            NBestPhonemes: { Phoneme: string }[];\n        };\n     }[];\n    PronunciationAssessment?: {\n        AccuracyScore: number;\n        ErrorType: string;\n    };\n    Syllables: { Syllable: string }[];\n}\n\n/**\n * Pronunciation assessment results.\n * @class PronunciationAssessmentResult\n * Added in version 1.15.0.\n */\nexport class PronunciationAssessmentResult {\n    private privPronJson: DetailResult;\n\n    private constructor(jsonString: string) {\n        const j = JSON.parse(jsonString) as AssessmentResult;\n        Contracts.throwIfNullOrUndefined(j.NBest[0], \"NBest\");\n        this.privPronJson = j.NBest[0];\n    }\n\n    /**\n     * @member PronunciationAssessmentResult.fromResult\n     * @function\n     * @public\n     * @param {RecognitionResult} result The recognition result.\n     * @return {PronunciationAssessmentConfig} Instance of PronunciationAssessmentConfig\n     * @summary Creates an instance of the PronunciationAssessmentResult from recognition result.\n     */\n    public static fromResult(result: RecognitionResult): PronunciationAssessmentResult {\n        Contracts.throwIfNullOrUndefined(result, \"result\");\n        const json: string = result.properties.getProperty(PropertyId.SpeechServiceResponse_JsonResult);\n        Contracts.throwIfNullOrUndefined(json, \"json\");\n        return new PronunciationAssessmentResult(json);\n    }\n\n    /**\n     * Gets the detail result of pronunciation assessment.\n     * @member PronunciationAssessmentConfig.prototype.detailResult\n     * @function\n     * @public\n     * @returns {DetailResult} detail result.\n     */\n    public get detailResult(): DetailResult {\n        return this.privPronJson;\n    }\n\n    /**\n     * The score indicating the pronunciation accuracy of the given speech, which indicates\n     * how closely the phonemes match a native speaker's pronunciation.\n     * @member PronunciationAssessmentResult.prototype.accuracyScore\n     * @function\n     * @public\n     * @returns {number} Accuracy score.\n     */\n    public get accuracyScore(): number {\n        return this.detailResult.PronunciationAssessment.AccuracyScore;\n    }\n\n    /**\n     * The overall score indicating the pronunciation quality of the given speech.\n     * This is calculated from AccuracyScore, FluencyScore and CompletenessScore with weight.\n     * @member PronunciationAssessmentResult.prototype.pronunciationScore\n     * @function\n     * @public\n     * @returns {number} Pronunciation score.\n     */\n    public get pronunciationScore(): number {\n        return this.detailResult.PronunciationAssessment.PronScore;\n    }\n\n    /**\n     * The score indicating the completeness of the given speech by calculating the ratio of pronounced words towards entire input.\n     * @member PronunciationAssessmentResult.prototype.completenessScore\n     * @function\n     * @public\n     * @returns {number} Completeness score.\n     */\n    public get completenessScore(): number {\n        return this.detailResult.PronunciationAssessment.CompletenessScore;\n    }\n\n    /**\n     * The score indicating the fluency of the given speech.\n     * @member PronunciationAssessmentResult.prototype.fluencyScore\n     * @function\n     * @public\n     * @returns {number} Fluency score.\n     */\n    public get fluencyScore(): number {\n        return this.detailResult.PronunciationAssessment.FluencyScore;\n    }\n}\n"]}