{"version":3,"sources":["src/sdk/SpeakerRecognitionResult.ts"],"names":[],"mappings":"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","file":"SpeakerRecognitionResult.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\n/* eslint-disable max-classes-per-file */\nimport { CancellationErrorCodePropertyName, SpeakerResponse } from \"../common.speech/Exports\";\nimport {\n    CancellationDetailsBase,\n    CancellationErrorCode,\n    CancellationReason,\n    PropertyCollection,\n    PropertyId,\n    ResultReason,\n} from \"./Exports\";\n\nexport enum SpeakerRecognitionResultType {\n    Verify,\n    Identify\n}\n\n/**\n * Output format\n * @class SpeakerRecognitionResult\n */\nexport class SpeakerRecognitionResult {\n    private privReason: ResultReason;\n    private privProperties: PropertyCollection;\n    private privProfileId: string;\n    private privScore: number;\n    private privErrorDetails: string;\n\n    public constructor(response: SpeakerResponse, resultReason: ResultReason = ResultReason.RecognizedSpeaker, cancellationErrorCode: CancellationErrorCode = CancellationErrorCode.NoError, errorDetails: string = \"\") {\n        this.privProperties = new PropertyCollection();\n        const resultType = response.scenario === \"TextIndependentIdentification\" ? SpeakerRecognitionResultType.Identify : SpeakerRecognitionResultType.Verify;\n        this.privReason = resultReason;\n        if (this.privReason !== ResultReason.Canceled) {\n            if (resultType === SpeakerRecognitionResultType.Identify) {\n                this.privProfileId = response.identificationResult.identifiedProfile.profileId;\n                this.privScore = response.identificationResult.identifiedProfile.score;\n                this.privReason = ResultReason.RecognizedSpeakers;\n            } else {\n                this.privScore = response.verificationResult.score;\n                if (response.verificationResult.recognitionResult.toLowerCase() !== \"accept\") {\n                    this.privReason = ResultReason.NoMatch;\n                }\n                if (response.verificationResult.profileId !== undefined && response.verificationResult.profileId !== \"\") {\n                    this.privProfileId = response.verificationResult.profileId;\n                }\n            }\n        } else {\n            this.privErrorDetails = errorDetails;\n            this.privProperties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[cancellationErrorCode]);\n        }\n        this.privProperties.setProperty(PropertyId.SpeechServiceResponse_JsonResult, JSON.stringify(response));\n    }\n\n    public get properties(): PropertyCollection {\n        return this.privProperties;\n    }\n\n    public get reason(): ResultReason {\n        return this.privReason;\n    }\n\n    public get profileId(): string {\n        return this.privProfileId;\n    }\n\n    public get errorDetails(): string {\n        return this.privErrorDetails;\n    }\n\n    public get score(): number {\n        return this.privScore;\n    }\n}\n\n/**\n * @class SpeakerRecognitionCancellationDetails\n */\nexport class SpeakerRecognitionCancellationDetails extends CancellationDetailsBase {\n\n    private constructor(reason: CancellationReason, errorDetails: string, errorCode: CancellationErrorCode) {\n        super(reason, errorDetails, errorCode);\n    }\n\n    /**\n     * Creates an instance of SpeakerRecognitionCancellationDetails object for the canceled SpeakerRecognitionResult\n     * @member SpeakerRecognitionCancellationDetails.fromResult\n     * @function\n     * @public\n     * @param {SpeakerRecognitionResult} result - The result that was canceled.\n     * @returns {SpeakerRecognitionCancellationDetails} The cancellation details object being created.\n     */\n    public static fromResult(result: SpeakerRecognitionResult): SpeakerRecognitionCancellationDetails {\n        const reason = CancellationReason.Error;\n        let errorCode: CancellationErrorCode = CancellationErrorCode.NoError;\n\n        if (!!result.properties) {\n            errorCode = CancellationErrorCode[result.properties.getProperty(CancellationErrorCodePropertyName, CancellationErrorCode[CancellationErrorCode.NoError]) as keyof typeof CancellationErrorCode];\n        }\n\n        return new SpeakerRecognitionCancellationDetails(reason, result.errorDetails, errorCode);\n    }\n}\n"]}