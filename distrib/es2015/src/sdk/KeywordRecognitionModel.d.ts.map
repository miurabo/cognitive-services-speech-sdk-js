{"version":3,"sources":["src/sdk/KeywordRecognitionModel.ts"],"names":[],"mappings":"AAKA;;;;GAIG;AACH,qBAAa,uBAAuB;IAChC,OAAO,CAAC,YAAY,CAAkB;IAEtC;;;OAGG;IACH,OAAO;IAIP;;;;;;;;;OASG;WACW,QAAQ,CAAC,QAAQ,EAAE,MAAM,GAAG,uBAAuB;IAMjE;;;;;;;;OAQG;WACW,UAAU,CAAC,IAAI,EAAE,IAAI,GAAG,uBAAuB;IAM7D;;;;;OAKG;IACI,KAAK,IAAI,IAAI;CAOvB","file":"KeywordRecognitionModel.d.ts","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\nimport { Contracts } from \"./Contracts\";\n\n/**\n * Represents a keyword recognition model for recognizing when\n * the user says a keyword to initiate further speech recognition.\n * @class KeywordRecognitionModel\n */\nexport class KeywordRecognitionModel {\n    private privDisposed: boolean = false;\n\n    /**\n     * Create and initializes a new instance.\n     * @constructor\n     */\n    private constructor() {\n        return;\n    }\n\n    /**\n     * Creates a keyword recognition model using the specified filename.\n     * @member KeywordRecognitionModel.fromFile\n     * @function\n     * @public\n     * @param {string} fileName - A string that represents file name for the keyword recognition model.\n     * Note, the file can point to a zip file in which case the model\n     * will be extracted from the zip.\n     * @returns {KeywordRecognitionModel} The keyword recognition model being created.\n     */\n    public static fromFile(fileName: string): KeywordRecognitionModel {\n        Contracts.throwIfFileDoesNotExist(fileName, \"fileName\");\n\n        throw new Error(\"Not yet implemented.\");\n    }\n\n    /**\n     * Creates a keyword recognition model using the specified filename.\n     * @member KeywordRecognitionModel.fromStream\n     * @function\n     * @public\n     * @param {string} file - A File that represents file for the keyword recognition model.\n     * Note, the file can point to a zip file in which case the model will be extracted from the zip.\n     * @returns {KeywordRecognitionModel} The keyword recognition model being created.\n     */\n    public static fromStream(file: File): KeywordRecognitionModel {\n        Contracts.throwIfNull(file, \"file\");\n\n        throw new Error(\"Not yet implemented.\");\n    }\n\n    /**\n     * Dispose of associated resources.\n     * @member KeywordRecognitionModel.prototype.close\n     * @function\n     * @public\n     */\n    public close(): void {\n        if (this.privDisposed) {\n            return;\n        }\n\n        this.privDisposed = true;\n    }\n}\n"]}