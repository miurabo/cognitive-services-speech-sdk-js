{"version":3,"sources":["src/sdk/ConversationTranscriptionResult.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,kBAAkB,EAAE,iBAAiB,EAAE,YAAY,EAAE,MAAM,WAAW,CAAC;AAEhF;;;GAGG;AACH,qBAAa,+BAAgC,SAAQ,iBAAiB;IAClE,OAAO,CAAC,QAAQ,CAAC,aAAa,CAAS;IACvC;;;;;;;;;;;;;;;OAeG;gBACgB,QAAQ,CAAC,EAAE,MAAM,EAAE,MAAM,CAAC,EAAE,YAAY,EAAE,IAAI,CAAC,EAAE,MAAM,EACvD,QAAQ,CAAC,EAAE,MAAM,EAAE,MAAM,CAAC,EAAE,MAAM,EAAE,QAAQ,CAAC,EAAE,MAAM,EACrD,2BAA2B,CAAC,EAAE,MAAM,EAAE,SAAS,CAAC,EAAE,MAAM,EAAE,YAAY,CAAC,EAAE,MAAM,EAC/E,IAAI,CAAC,EAAE,MAAM,EAAE,UAAU,CAAC,EAAE,kBAAkB;IAKjE;;;;;;OAMG;IACH,IAAW,SAAS,IAAI,MAAM,CAE7B;CAEJ","file":"ConversationTranscriptionResult.d.ts","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\nimport { PropertyCollection, RecognitionResult, ResultReason } from \"./Exports\";\n\n/**\n * Defines result of conversation transcription.\n * @class ConversationTranscriptionResult\n */\nexport class ConversationTranscriptionResult extends RecognitionResult {\n    private readonly privSpeakerId: string;\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @public\n     * @param {string} resultId - The result id.\n     * @param {ResultReason} reason - The reason.\n     * @param {string} text - The recognized text.\n     * @param {number} duration - The duration.\n     * @param {number} offset - The offset into the stream.\n     * @param {string} language - Primary Language detected, if provided.\n     * @param {string} languageDetectionConfidence - Primary Language confidence (\"Unknown,\" \"Low,\" \"Medium,\" \"High\"...), if provided.\n     * @param {string} speakerId - speaker id for conversation transcription, if provided.\n     * @param {string} errorDetails - Error details, if provided.\n     * @param {string} json - Additional Json, if provided.\n     * @param {PropertyCollection} properties - Additional properties, if provided.\n     */\n    public constructor(resultId?: string, reason?: ResultReason, text?: string,\n                       duration?: number, offset?: number, language?: string,\n                       languageDetectionConfidence?: string, speakerId?: string, errorDetails?: string,\n                       json?: string, properties?: PropertyCollection) {\n        super(resultId, reason, text, duration, offset, language, languageDetectionConfidence, errorDetails, json, properties);\n        this.privSpeakerId = speakerId;\n    }\n\n    /**\n     * speaker id from conversation transcription/id scenarios\n     * @member ConversationTranscription.prototype.speakerId\n     * @function\n     * @public\n     * @returns {string} id of speaker in given result\n     */\n    public get speakerId(): string {\n        return this.privSpeakerId;\n    }\n\n}\n"]}