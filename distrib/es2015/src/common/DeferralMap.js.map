{"version":3,"sources":["src/common/DeferralMap.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,kCAAkC;AAIlC;;;;;GAKG;AAEH,MAAM,OAAO,WAAW;IAAxB;QACY,YAAO,GAAoC,EAAE,CAAC;IAmB1D,CAAC;IAjBU,GAAG,CAAI,EAAU,EAAE,QAAqB;QAC3C,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC;IAChC,CAAC;IAEM,KAAK,CAAC,EAAU;QACnB,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IAC5B,CAAC;IAEM,QAAQ,CAAI,EAAU,EAAE,MAAS;QACpC,IAAI;YACA,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SACpC;QAAC,OAAO,KAAK,EAAE;YACZ,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,KAAe,CAAC,CAAC;SAC5C;gBAAS;YACN,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC;SAC/B;IACN,CAAC;CACJ","file":"DeferralMap.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\nimport { Deferred } from \"./Promise\";\n\n/**\n * The error that is thrown when an argument passed in is null.\n *\n * @export\n * @class DefferalMap\n */\n\nexport class DeferralMap {\n    private privMap: { [id: string]: Deferred<any> } = {};\n\n    public add<T>(id: string, deferral: Deferred<T>): void {\n        this.privMap[id] = deferral;\n    }\n\n    public getId(id: string): Deferred<any> {\n        return this.privMap[id];\n    }\n\n    public complete<T>(id: string, result: T): void {\n        try {\n            this.privMap[id].resolve(result);\n        } catch (error) {\n            this.privMap[id].reject(error as string);\n        } finally {\n            this.privMap[id] = undefined;\n         }\n    }\n}\n"]}