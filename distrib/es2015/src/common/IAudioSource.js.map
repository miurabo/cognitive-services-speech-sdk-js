{"version":3,"sources":["src/common/IAudioSource.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,kCAAkC","file":"IAudioSource.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\nimport { ISpeechConfigAudioDevice } from \"../common.speech/Exports\";\nimport { AudioStreamFormatImpl } from \"../sdk/Audio/AudioStreamFormat\";\nimport { AudioSourceEvent } from \"./AudioSourceEvents\";\nimport { EventSource } from \"./EventSource\";\nimport { IDetachable } from \"./IDetachable\";\nimport { IStreamChunk } from \"./Stream\";\n\nexport interface IAudioSource {\n    id(): string;\n    turnOn(): Promise<void>;\n    attach(audioNodeId: string): Promise<IAudioStreamNode>;\n    detach(audioNodeId: string): void;\n    turnOff(): Promise<void>;\n    events: EventSource<AudioSourceEvent>;\n    format: Promise<AudioStreamFormatImpl>;\n    deviceInfo: Promise<ISpeechConfigAudioDevice>;\n    setProperty?(name: string, value: string): void;\n    getProperty?(name: string, def?: string): string;\n}\n\nexport interface IAudioStreamNode extends IDetachable {\n    id(): string;\n    read(): Promise<IStreamChunk<ArrayBuffer>>;\n}\n"]}