{"version":3,"sources":["src/common.speech/ServiceMessages/SpeechHypothesis.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,kCAAkC;AAalC,MAAM,OAAO,gBAAgB;IAGzB,YAAoB,IAAY;QAC5B,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAsB,CAAC;IACtE,CAAC;IAEM,MAAM,CAAC,QAAQ,CAAC,IAAY;QAC/B,OAAO,IAAI,gBAAgB,CAAC,IAAI,CAAC,CAAC;IACtC,CAAC;IAED,IAAW,IAAI;QACX,OAAO,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC;IAC1C,CAAC;IAED,IAAW,MAAM;QACb,OAAO,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC;IAC5C,CAAC;IAED,IAAW,QAAQ;QACf,OAAO,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC;IAC9C,CAAC;IAED,IAAW,QAAQ;QACf,OAAO,IAAI,CAAC,oBAAoB,CAAC,eAAe,KAAK,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,eAAe,CAAC,QAAQ,CAAC;IACpI,CAAC;IAED,IAAW,2BAA2B;QAClC,OAAO,IAAI,CAAC,oBAAoB,CAAC,eAAe,KAAK,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,eAAe,CAAC,UAAU,CAAC;IACtI,CAAC;IAED,IAAW,SAAS;QAChB,OAAO,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC;IAC/C,CAAC;CACJ","file":"SpeechHypothesis.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\nimport { IPrimaryLanguage } from \"./SimpleSpeechPhrase\";\n\n// speech.hypothesis\nexport interface ISpeechHypothesis {\n    Text: string;\n    Offset: number;\n    Duration: number;\n    PrimaryLanguage?: IPrimaryLanguage;\n    SpeakerId?: string;\n}\n\nexport class SpeechHypothesis implements ISpeechHypothesis {\n    private privSpeechHypothesis: ISpeechHypothesis;\n\n    private constructor(json: string) {\n        this.privSpeechHypothesis = JSON.parse(json) as ISpeechHypothesis;\n    }\n\n    public static fromJSON(json: string): SpeechHypothesis {\n        return new SpeechHypothesis(json);\n    }\n\n    public get Text(): string {\n        return this.privSpeechHypothesis.Text;\n    }\n\n    public get Offset(): number {\n        return this.privSpeechHypothesis.Offset;\n    }\n\n    public get Duration(): number {\n        return this.privSpeechHypothesis.Duration;\n    }\n\n    public get Language(): string {\n        return this.privSpeechHypothesis.PrimaryLanguage === undefined ? undefined : this.privSpeechHypothesis.PrimaryLanguage.Language;\n    }\n\n    public get LanguageDetectionConfidence(): string {\n        return this.privSpeechHypothesis.PrimaryLanguage === undefined ? undefined : this.privSpeechHypothesis.PrimaryLanguage.Confidence;\n    }\n\n    public get SpeakerId(): string {\n        return this.privSpeechHypothesis.SpeakerId;\n    }\n}\n"]}