{"version":3,"sources":["src/common.speech/Transcription/ServiceMessages/ParticipantResponsePayload.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,kCAAkC;AAiClC,MAAM,iBAAiB,GAAG,CAAC,IAAY,EAAoC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAqC,CAAC;AACnI,MAAM,wBAAwB,GAAG,CAAC,IAAY,EAA+B,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAgC,CAAC;AAEhI,MAAM,OAAO,+BAA+B;IAGxC,YAAoB,IAAY;QAC5B,IAAI,CAAC,+BAA+B,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC;IACnE,CAAC;IAED,IAAW,MAAM;QACb,OAAO,IAAI,CAAC,+BAA+B,CAAC,MAAM,CAAC;IACvD,CAAC;IAED,IAAW,EAAE;QACT,OAAO,IAAI,CAAC,+BAA+B,CAAC,EAAE,CAAC;IACnD,CAAC;IAED,IAAW,OAAO;QACd,OAAO,IAAI,CAAC,+BAA+B,CAAC,OAAO,CAAC;IACxD,CAAC;IAED,IAAW,YAAY;QACnB,OAAO,IAAI,CAAC,+BAA+B,CAAC,YAAY,CAAC;IAC7D,CAAC;IAED,IAAW,KAAK;QACZ,OAAO,IAAI,CAAC,+BAA+B,CAAC,KAAK,CAAC;IACtD,CAAC;IAED,IAAW,WAAW;QAClB,OAAO,IAAI,CAAC,+BAA+B,CAAC,WAAW,CAAC;IAC5D,CAAC;IAED,IAAW,eAAe;QACtB,OAAO,IAAI,CAAC,+BAA+B,CAAC,eAAe,CAAC;IAChE,CAAC;IAED,IAAW,mBAAmB;QAC1B,OAAO,IAAI,CAAC,+BAA+B,CAAC,mBAAmB,CAAC;IACpE,CAAC;IAED,IAAW,UAAU;QACjB,OAAO,IAAI,CAAC,+BAA+B,CAAC,UAAU,CAAC;IAC3D,CAAC;IAED,IAAW,OAAO;QACd,OAAO,IAAI,CAAC,+BAA+B,CAAC,OAAO,CAAC;IACxD,CAAC;IAED,IAAW,IAAI;QACX,OAAO,IAAI,CAAC,+BAA+B,CAAC,IAAI,CAAC;IACrD,CAAC;IAEM,MAAM,CAAC,QAAQ,CAAC,IAAY;QAC/B,OAAO,IAAI,+BAA+B,CAAC,IAAI,CAAC,CAAC;IACrD,CAAC;CAEJ;AAED,MAAM,OAAO,0BAA0B;IAInC,YAAoB,IAAY;QAC5B,IAAI,CAAC,8BAA8B,GAAG,wBAAwB,CAAC,IAAI,CAAC,CAAC;IACzE,CAAC;IAED,IAAW,QAAQ;QACf,OAAO,IAAI,CAAC,8BAA8B,CAAC,QAAQ,CAAC;IACxD,CAAC;IAED,IAAW,MAAM;QACb,OAAO,IAAI,CAAC,8BAA8B,CAAC,MAAM,CAAC;IACtD,CAAC;IAED,IAAW,MAAM;QACb,OAAO,IAAI,CAAC,8BAA8B,CAAC,MAAM,CAAC;IACtD,CAAC;IAED,IAAW,OAAO;QACd,OAAO,IAAI,CAAC,8BAA8B,CAAC,OAAO,CAAC;IACvD,CAAC;IAED,IAAW,MAAM;QACb,OAAO,IAAI,CAAC,8BAA8B,CAAC,MAAM,CAAC;IACtD,CAAC;IAED,IAAW,aAAa;QACpB,OAAO,IAAI,CAAC,8BAA8B,CAAC,aAAa,CAAC;IAC7D,CAAC;IAED,IAAW,MAAM;QACb,OAAO,IAAI,CAAC,8BAA8B,CAAC,MAAM,CAAC;IACtD,CAAC;IAEM,MAAM,CAAC,QAAQ,CAAC,IAAY;QAC/B,OAAO,IAAI,0BAA0B,CAAC,IAAI,CAAC,CAAC;IAChD,CAAC;CAEJ","file":"ParticipantResponsePayload.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\n/* eslint-disable max-classes-per-file */\n/**\n * Defines the payload for incoming list of participants\n */\nexport interface IParticipantsListPayloadResponse {\n    roomid: string;\n    id: string;\n    command: string;\n    participants: IParticipantPayloadResponse[];\n    token: string;\n    translateTo: string[];\n    profanityFilter: string;\n    roomProfanityFilter: string;\n    roomLocked: boolean;\n    muteAll: boolean;\n    type: string;\n}\n\n/**\n * Defines the payload for incoming participant\n */\nexport interface IParticipantPayloadResponse {\n    nickname: string;\n    locale: string;\n    usetts: boolean;\n    ismuted: boolean;\n    ishost: boolean;\n    participantId: string;\n    avatar?: string;\n}\n\nconst parseListResponse = (json: string): IParticipantsListPayloadResponse => JSON.parse(json) as IParticipantsListPayloadResponse;\nconst parseParticipantResponse = (json: string): IParticipantPayloadResponse => JSON.parse(json) as IParticipantPayloadResponse;\n\nexport class ParticipantsListPayloadResponse implements IParticipantsListPayloadResponse {\n    private privParticipantsPayloadResponse: IParticipantsListPayloadResponse;\n\n    private constructor(json: string) {\n        this.privParticipantsPayloadResponse = parseListResponse(json);\n    }\n\n    public get roomid(): string {\n        return this.privParticipantsPayloadResponse.roomid;\n    }\n\n    public get id(): string {\n        return this.privParticipantsPayloadResponse.id;\n    }\n\n    public get command(): string {\n        return this.privParticipantsPayloadResponse.command;\n    }\n\n    public get participants(): IParticipantPayloadResponse[] {\n        return this.privParticipantsPayloadResponse.participants;\n    }\n\n    public get token(): string {\n        return this.privParticipantsPayloadResponse.token;\n    }\n\n    public get translateTo(): string[] {\n        return this.privParticipantsPayloadResponse.translateTo;\n    }\n\n    public get profanityFilter(): string {\n        return this.privParticipantsPayloadResponse.profanityFilter;\n    }\n\n    public get roomProfanityFilter(): string {\n        return this.privParticipantsPayloadResponse.roomProfanityFilter;\n    }\n\n    public get roomLocked(): boolean {\n        return this.privParticipantsPayloadResponse.roomLocked;\n    }\n\n    public get muteAll(): boolean {\n        return this.privParticipantsPayloadResponse.muteAll;\n    }\n\n    public get type(): string {\n        return this.privParticipantsPayloadResponse.type;\n    }\n\n    public static fromJSON(json: string): ParticipantsListPayloadResponse {\n        return new ParticipantsListPayloadResponse(json);\n    }\n\n}\n\nexport class ParticipantPayloadResponse implements IParticipantPayloadResponse {\n\n    private privParticipantPayloadResponse: IParticipantPayloadResponse;\n\n    private constructor(json: string) {\n        this.privParticipantPayloadResponse = parseParticipantResponse(json);\n    }\n\n    public get nickname(): string {\n        return this.privParticipantPayloadResponse.nickname;\n    }\n\n    public get locale(): string {\n        return this.privParticipantPayloadResponse.locale;\n    }\n\n    public get usetts(): boolean {\n        return this.privParticipantPayloadResponse.usetts;\n    }\n\n    public get ismuted(): boolean {\n        return this.privParticipantPayloadResponse.ismuted;\n    }\n\n    public get ishost(): boolean {\n        return this.privParticipantPayloadResponse.ishost;\n    }\n\n    public get participantId(): string {\n        return this.privParticipantPayloadResponse.participantId;\n    }\n\n    public get avatar(): string {\n        return this.privParticipantPayloadResponse.avatar;\n    }\n\n    public static fromJSON(json: string): ParticipantPayloadResponse {\n        return new ParticipantPayloadResponse(json);\n    }\n\n}\n"]}