{"version":3,"sources":["src/common.speech/Transcription/ServiceMessages/CommandResponsePayload.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,kCAAkC;AAgBlC,MAAM,oBAAoB,GAAG,CAAC,IAAY,EAA2B,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAA4B,CAAC;AAEpH,MAAM,OAAO,sBAAsB;IAG/B,YAAmB,IAAY;QAC3B,IAAI,CAAC,mBAAmB,GAAG,oBAAoB,CAAC,IAAI,CAAC,CAAC;IAC1D,CAAC;IAED,IAAW,IAAI;QACX,OAAO,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC;IACzC,CAAC;IACD,IAAW,OAAO;QACd,OAAO,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC;IAC5C,CAAC;IACD,IAAW,EAAE;QACT,OAAO,IAAI,CAAC,mBAAmB,CAAC,EAAE,CAAC;IACvC,CAAC;IACD,IAAW,QAAQ;QACf,OAAO,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC;IAC7C,CAAC;IACD,IAAW,aAAa;QACpB,OAAO,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC;IAClD,CAAC;IACD,IAAW,MAAM;QACb,OAAO,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC;IAC3C,CAAC;IACD,IAAW,KAAK;QACZ,OAAO,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC;IAC1C,CAAC;IACD,IAAW,KAAK;QACZ,OAAO,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC;IAC1C,CAAC;IAEM,MAAM,CAAC,QAAQ,CAAC,IAAY;QAC/B,OAAO,IAAI,sBAAsB,CAAC,IAAI,CAAC,CAAC;IAC5C,CAAC;CAEJ","file":"CommandResponsePayload.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\n/**\n * Defines the payload for incoming websocket commands\n */\nexport interface ICommandResponsePayload {\n    type: string;\n    command?: string;\n    id?: string; // incoming ws\n    nickname?: string; // incoming ws\n    participantId?: string;\n    roomid?: string;\n    value: boolean | number | string;\n    token?: string;\n}\n\nconst parseCommandResponse = (json: string): ICommandResponsePayload => JSON.parse(json) as ICommandResponsePayload;\n\nexport class CommandResponsePayload implements ICommandResponsePayload {\n    private privCommandResponse: ICommandResponsePayload;\n\n    public constructor(json: string) {\n        this.privCommandResponse = parseCommandResponse(json);\n    }\n\n    public get type(): string {\n        return this.privCommandResponse.type;\n    }\n    public get command(): string {\n        return this.privCommandResponse.command;\n    }\n    public get id(): string {\n        return this.privCommandResponse.id;\n    }\n    public get nickname(): string {\n        return this.privCommandResponse.nickname;\n    }\n    public get participantId(): string {\n        return this.privCommandResponse.participantId;\n    }\n    public get roomid(): string {\n        return this.privCommandResponse.roomid;\n    }\n    public get value(): boolean | number | string {\n        return this.privCommandResponse.value;\n    }\n    public get token(): string {\n        return this.privCommandResponse.token;\n    }\n\n    public static fromJSON(json: string): CommandResponsePayload {\n        return new CommandResponsePayload(json);\n    }\n\n}\n"]}