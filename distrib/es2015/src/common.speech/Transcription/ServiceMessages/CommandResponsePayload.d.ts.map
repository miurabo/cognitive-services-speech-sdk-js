{"version":3,"sources":["src/common.speech/Transcription/ServiceMessages/CommandResponsePayload.ts"],"names":[],"mappings":"AAGA;;GAEG;AACH,MAAM,WAAW,uBAAuB;IACpC,IAAI,EAAE,MAAM,CAAC;IACb,OAAO,CAAC,EAAE,MAAM,CAAC;IACjB,EAAE,CAAC,EAAE,MAAM,CAAC;IACZ,QAAQ,CAAC,EAAE,MAAM,CAAC;IAClB,aAAa,CAAC,EAAE,MAAM,CAAC;IACvB,MAAM,CAAC,EAAE,MAAM,CAAC;IAChB,KAAK,EAAE,OAAO,GAAG,MAAM,GAAG,MAAM,CAAC;IACjC,KAAK,CAAC,EAAE,MAAM,CAAC;CAClB;AAID,qBAAa,sBAAuB,YAAW,uBAAuB;IAClE,OAAO,CAAC,mBAAmB,CAA0B;gBAElC,IAAI,EAAE,MAAM;IAI/B,IAAW,IAAI,IAAI,MAAM,CAExB;IACD,IAAW,OAAO,IAAI,MAAM,CAE3B;IACD,IAAW,EAAE,IAAI,MAAM,CAEtB;IACD,IAAW,QAAQ,IAAI,MAAM,CAE5B;IACD,IAAW,aAAa,IAAI,MAAM,CAEjC;IACD,IAAW,MAAM,IAAI,MAAM,CAE1B;IACD,IAAW,KAAK,IAAI,OAAO,GAAG,MAAM,GAAG,MAAM,CAE5C;IACD,IAAW,KAAK,IAAI,MAAM,CAEzB;WAEa,QAAQ,CAAC,IAAI,EAAE,MAAM,GAAG,sBAAsB;CAI/D","file":"CommandResponsePayload.d.ts","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\n/**\n * Defines the payload for incoming websocket commands\n */\nexport interface ICommandResponsePayload {\n    type: string;\n    command?: string;\n    id?: string; // incoming ws\n    nickname?: string; // incoming ws\n    participantId?: string;\n    roomid?: string;\n    value: boolean | number | string;\n    token?: string;\n}\n\nconst parseCommandResponse = (json: string): ICommandResponsePayload => JSON.parse(json) as ICommandResponsePayload;\n\nexport class CommandResponsePayload implements ICommandResponsePayload {\n    private privCommandResponse: ICommandResponsePayload;\n\n    public constructor(json: string) {\n        this.privCommandResponse = parseCommandResponse(json);\n    }\n\n    public get type(): string {\n        return this.privCommandResponse.type;\n    }\n    public get command(): string {\n        return this.privCommandResponse.command;\n    }\n    public get id(): string {\n        return this.privCommandResponse.id;\n    }\n    public get nickname(): string {\n        return this.privCommandResponse.nickname;\n    }\n    public get participantId(): string {\n        return this.privCommandResponse.participantId;\n    }\n    public get roomid(): string {\n        return this.privCommandResponse.roomid;\n    }\n    public get value(): boolean | number | string {\n        return this.privCommandResponse.value;\n    }\n    public get token(): string {\n        return this.privCommandResponse.token;\n    }\n\n    public static fromJSON(json: string): CommandResponsePayload {\n        return new CommandResponsePayload(json);\n    }\n\n}\n"]}