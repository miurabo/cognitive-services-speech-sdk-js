{"version":3,"sources":["src/common.speech/Transcription/ServiceMessages/TranslationResponsePayload.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,kCAAkC;AA+BlC,MAAM,mBAAmB,GAAG,CAAC,IAAY,EAA0B,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAA2B,CAAC;AACjH,MAAM,iBAAiB,GAAG,CAAC,IAAY,EAAwB,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAyB,CAAC;AAE3G,MAAM,OAAO,qBAAqB;IAI9B,YAAoB,IAAY;QAC5B,IAAI,CAAC,kBAAkB,GAAG,mBAAmB,CAAC,IAAI,CAAC,CAAC;IACxD,CAAC;IAED,IAAW,WAAW;QAClB,OAAO,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC;IAC/C,CAAC;IAED,IAAW,YAAY;QACnB,OAAO,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC;IAChD,CAAC;IAED,IAAW,EAAE;QACT,OAAO,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC;IACtC,CAAC;IAED,IAAW,QAAQ;QACf,OAAO,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC;IAC5C,CAAC;IAED,IAAW,QAAQ;QACf,OAAO,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC;IAC5C,CAAC;IAED,IAAW,aAAa;QACpB,OAAO,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC;IACjD,CAAC;IAED,IAAW,MAAM;QACb,OAAO,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC;IAC1C,CAAC;IAED,IAAW,SAAS;QAChB,OAAO,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC;IAC7C,CAAC;IAED,IAAW,IAAI;QACX,OAAO,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC;IACxC,CAAC;IAED,IAAW,OAAO;QACd,OAAO,IAAI,CAAC,kBAAkB,CAAC,IAAI,KAAK,OAAO,CAAC;IACpD,CAAC;IAEM,MAAM,CAAC,QAAQ,CAAC,IAAY;QAC/B,OAAO,IAAI,qBAAqB,CAAC,IAAI,CAAC,CAAC;IAC3C,CAAC;CAEJ;AAED,MAAM,OAAO,mBAAmB;IAI5B,YAAoB,IAAY;QAC5B,IAAI,CAAC,gBAAgB,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC;IACpD,CAAC;IAED,IAAW,YAAY;QACnB,OAAO,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC;IAC9C,CAAC;IAED,IAAW,YAAY;QACnB,OAAO,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC;IAC9C,CAAC;IAED,IAAW,EAAE;QACT,OAAO,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC;IACpC,CAAC;IAED,IAAW,QAAQ;QACf,OAAO,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC;IAC1C,CAAC;IAED,IAAW,QAAQ;QACf,OAAO,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC;IAC1C,CAAC;IAED,IAAW,aAAa;QACpB,OAAO,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC;IAC/C,CAAC;IAED,IAAW,MAAM;QACb,OAAO,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC;IACxC,CAAC;IAED,IAAW,SAAS;QAChB,OAAO,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC;IAC3C,CAAC;IAED,IAAW,IAAI;QACX,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC;IACtC,CAAC;IAEM,MAAM,CAAC,QAAQ,CAAC,IAAY;QAC/B,OAAO,IAAI,mBAAmB,CAAC,IAAI,CAAC,CAAC;IACzC,CAAC;CAEJ","file":"TranslationResponsePayload.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\n/* eslint-disable max-classes-per-file */\n/**\n * Defines the payload for incoming translation messages\n */\nexport interface ITranslationResponsePayload {\n    lang: string;\n    translation: string;\n}\n\nexport interface ITranslationCommandMessage {\n    translations: ITranslationResponsePayload[];\n    id: string;\n    language: string;\n    nickname: string;\n    participantId: string;\n    roomid: string;\n    timestamp: string;\n    type: string;\n}\n\nexport interface ISpeechResponsePayload extends ITranslationCommandMessage {\n    recognition: string;\n    isFinal: boolean;\n}\n\nexport interface ITextResponsePayload extends ITranslationCommandMessage {\n    originalText: string;\n}\n\nconst parseSpeechResponse = (json: string): ISpeechResponsePayload => JSON.parse(json) as ISpeechResponsePayload;\nconst parseTextResponse = (json: string): ITextResponsePayload => JSON.parse(json) as ITextResponsePayload;\n\nexport class SpeechResponsePayload implements ISpeechResponsePayload {\n\n    private privSpeechResponse: ISpeechResponsePayload;\n\n    private constructor(json: string) {\n        this.privSpeechResponse = parseSpeechResponse(json);\n    }\n\n    public get recognition(): string {\n        return this.privSpeechResponse.recognition;\n    }\n\n    public get translations(): ITranslationResponsePayload[] {\n        return this.privSpeechResponse.translations;\n    }\n\n    public get id(): string {\n        return this.privSpeechResponse.id;\n    }\n\n    public get language(): string {\n        return this.privSpeechResponse.language;\n    }\n\n    public get nickname(): string {\n        return this.privSpeechResponse.nickname;\n    }\n\n    public get participantId(): string {\n        return this.privSpeechResponse.participantId;\n    }\n\n    public get roomid(): string {\n        return this.privSpeechResponse.roomid;\n    }\n\n    public get timestamp(): string {\n        return this.privSpeechResponse.timestamp;\n    }\n\n    public get type(): string {\n        return this.privSpeechResponse.type;\n    }\n\n    public get isFinal(): boolean {\n        return this.privSpeechResponse.type === \"final\";\n    }\n\n    public static fromJSON(json: string): SpeechResponsePayload {\n        return new SpeechResponsePayload(json);\n    }\n\n}\n\nexport class TextResponsePayload implements ITextResponsePayload {\n\n    private privTextResponse: ITextResponsePayload;\n\n    private constructor(json: string) {\n        this.privTextResponse = parseTextResponse(json);\n    }\n\n    public get originalText(): string {\n        return this.privTextResponse.originalText;\n    }\n\n    public get translations(): ITranslationResponsePayload[] {\n        return this.privTextResponse.translations;\n    }\n\n    public get id(): string {\n        return this.privTextResponse.id;\n    }\n\n    public get language(): string {\n        return this.privTextResponse.language;\n    }\n\n    public get nickname(): string {\n        return this.privTextResponse.nickname;\n    }\n\n    public get participantId(): string {\n        return this.privTextResponse.participantId;\n    }\n\n    public get roomid(): string {\n        return this.privTextResponse.roomid;\n    }\n\n    public get timestamp(): string {\n        return this.privTextResponse.timestamp;\n    }\n\n    public get type(): string {\n        return this.privTextResponse.type;\n    }\n\n    public static fromJSON(json: string): TextResponsePayload {\n        return new TextResponsePayload(json);\n    }\n\n}\n"]}