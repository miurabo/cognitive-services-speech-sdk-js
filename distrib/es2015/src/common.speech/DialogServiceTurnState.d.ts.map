{"version":3,"sources":["src/common.speech/DialogServiceTurnState.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,qBAAqB,EAAE,MAAM,gCAAgC,CAAC;AACvE,OAAO,EAAqB,yBAAyB,EAAE,MAAM,gCAAgC,CAAC;AAC9F,OAAO,EAAE,6BAA6B,EAAE,MAAM,iCAAiC,CAAC;AAChF,OAAO,EAAE,uBAAuB,EAAyB,MAAM,2CAA2C,CAAC;AAE3G,qBAAa,sBAAsB;IAC/B,OAAO,CAAC,aAAa,CAAS;IAC9B,OAAO,CAAC,eAAe,CAAU;IACjC,OAAO,CAAC,eAAe,CAA4B;IACnD,OAAO,CAAC,gBAAgB,CAAM;IAC9B,OAAO,CAAC,eAAe,CAAgC;gBAEpC,OAAO,EAAE,6BAA6B,EAAE,SAAS,EAAE,MAAM;IAQ5E,IAAW,WAAW,IAAI,yBAAyB,CAIlD;IAEM,sBAAsB,CAAC,OAAO,EAAE,uBAAuB,EAAE,WAAW,CAAC,EAAE,qBAAqB,GAAG,yBAAyB;IAQxH,cAAc,IAAI,IAAI;IAMtB,QAAQ,IAAI,IAAI;IAQvB,OAAO,CAAC,mBAAmB;CAU9B","file":"DialogServiceTurnState.d.ts","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\nimport { AudioOutputFormatImpl } from \"../sdk/Audio/AudioOutputFormat\";\nimport { AudioOutputStream, PullAudioOutputStreamImpl } from \"../sdk/Audio/AudioOutputStream\";\nimport { DialogServiceTurnStateManager } from \"./DialogServiceTurnStateManager\";\nimport { ActivityPayloadResponse, MessageDataStreamType } from \"./ServiceMessages/ActivityResponsePayload\";\n\nexport class DialogServiceTurnState {\n    private privRequestId: string;\n    private privIsCompleted: boolean;\n    private privAudioStream: PullAudioOutputStreamImpl;\n    private privTimeoutToken: any;\n    private privTurnManager: DialogServiceTurnStateManager;\n\n    public constructor(manager: DialogServiceTurnStateManager, requestId: string) {\n        this.privRequestId = requestId;\n        this.privIsCompleted = false;\n        this.privAudioStream = null;\n        this.privTurnManager = manager;\n        this.resetTurnEndTimeout();\n    }\n\n    public get audioStream(): PullAudioOutputStreamImpl {\n        // Called when is needed to stream.\n        this.resetTurnEndTimeout();\n        return this.privAudioStream;\n    }\n\n    public processActivityPayload(payload: ActivityPayloadResponse, audioFormat?: AudioOutputFormatImpl): PullAudioOutputStreamImpl {\n        if (payload.messageDataStreamType === MessageDataStreamType.TextToSpeechAudio) {\n            this.privAudioStream = AudioOutputStream.createPullStream() as PullAudioOutputStreamImpl;\n            this.privAudioStream.format = (audioFormat !== undefined) ? audioFormat : AudioOutputFormatImpl.getDefaultOutputFormat();\n        }\n        return this.privAudioStream;\n    }\n\n    public endAudioStream(): void {\n        if (this.privAudioStream !== null && !this.privAudioStream.isClosed) {\n            this.privAudioStream.close();\n        }\n    }\n\n    public complete(): void {\n        if (this.privTimeoutToken !== undefined) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            clearTimeout(this.privTimeoutToken);\n        }\n        this.endAudioStream();\n    }\n\n    private resetTurnEndTimeout(): void {\n        if (this.privTimeoutToken !== undefined) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            clearTimeout(this.privTimeoutToken);\n        }\n        this.privTimeoutToken = setTimeout((): void => {\n            this.privTurnManager.CompleteTurn(this.privRequestId);\n            return;\n        }, 2000);\n    }\n}\n"]}